// Story Sharing - Recovery stories, success journeys, and inspirationimport React, { useState, useEffect, useCallback }, from react",import { ", Play }, from ", lucide-react",import.communityService, from "../../services/communityService",interface Story {}  id: string,  authorId: string,  authorName: string  authorAvatar ? : string,  isAnonymous: boolean,  title: "string,", `;`  content: "string,  summary: "string,  category: "recovery  | ", breakthrough'  | 'milestone'  | 'setback-overcome'  | 'daily-victory"  | ", inspiration",  tags: string[,]  journey: {},    startDate ? : Date,  timeframe: string,  challenges: string[,]  turningPoints: string[,]  keyLessons: string[,]  helpfulResources: string[,]  advice: string  },  inspiration: {},  hopeRating: number, // 1-10,  relatabilityScore: number // 1-10,  practicalValue: number // 1-10    inspirationalQuote ? : string  },  engagement: {},  views: number,  hearts: number,  bookmarks: number,  shares: number,  comments: number,  helpfulVotes: number}",  status: "draft  | ", published'  | 'featured"  | ", archived",  isVerified: boolean,  isFeatured: "boolean,",  moderationStatus: "approved  | ", pending"  | ", flagged",  createdAt: Date,  updatedAt: Date,  readingTime: number // minutes  audioVersion ? : {},  url: string,  duration: number}},interface StoryComment {}  id: string,  storyId: string,  authorId: string,  authorName: string,  isAnonymous: boolean,  content: string,",  type: "comment, "  | "gratitude'  | 'shared-experience"  | ", question",  createdAt: Date,  hearts: number,  isHelpful: boolean  parentCommentId?: string},interface StoryTemplate {}  id: string,  name: string,  description: string,  category: string,  prompts: {},  section: string,  questions: string[,]  placeholder: string}[];  estimatedTime: number},interface StoryCollection {}  id: string,  title: string,  description: string,  curator: string,  stories: string[,]  theme: string,  coverColor: string,  isPublic: boolean,  createdAt: Date},export const StorySharing: ReactFC = () => {},  const []tories, setStories] = useState<Story[]>([])  const []electedStory, setSelectedStory] = useState<Story | null>(null)  const []toryComments, setStoryComments] = useState<Map<string, StoryComment[]>>(new Map())  const []earchQuery", setSearchQuery] = useState(")"),",  const []ategoryFilter", setCategoryFilter] = useState<string>(", all)")",  const []ortBy", setSortBy] = useState<", recent'  | 'popular'  | 'inspiring'  | 'helpful'>('recent)")",  const []ctiveView", setActiveView] = useState<", discover'  | 'story-detail'  | 'create'  | 'my-stories'>('discover)")",  const []howCreateStory, setShowCreateStory] = useState(false)  const []electedTemplate", setSelectedTemplate] = useState<StoryTemplate | null>(null),;",  const []urrentUser] = useState({  id: "user-123,",    name: "StoryTeller, ",",  isAnonymous: false,    storiesShared: 3,    heartsReceived: 45  })  const []ewStory, setNewStory] = useState({},  title:  ,    content: , ",",    summary: ",",",  category: "recovery,    tags: ",",  isAnonymous: "false,",    journey: {  timeframe: ",",  challenges: [ ]s string[],      turningPoints: [ ]s string[],      keyLessons: [ ]s string[],      helpfulResources: [ ]s string[],      advice: "}",    inspirationalQuote: "  })",  const []ewComment", setNewComment] = useState({",  content: ",",",  type: "comment,",    isAnonymous: false,",  "});"  // Initialize mock data  useEffect(() => {},    const mockStories: Story[ ] []      {  id: story-1,",        authorId: "user-456,        authorName: "HopeSeeker,  isAnonymous: "false,        title: "From, Panic Attacks to Peace: My 2-Year Journey",        content: `wo years ago, I couldn`` leave my house without having a panic attack. Today", I", m writing this from a coffee shop downtown", feeling calm and grateful for how far I", ve come.",        It started in college when the pressure became overwhelming. What began as occasional worry turned into daily panic attacks that controlled every aspect of my life. I dropped out of school, lost friends, and felt completely hopeless.        The turning point came when my sister found me hyperventilating on my bedroom floor and insisted on taking me to the emergency room. The doctor there was the first person who explained that what I was experiencing had a name - panic disorder - and that it was treatable.";",        My journey involved therapy, medication, lifestyle changes, and most importantly", learning to be patient and compassionate with myself. I won", t lie - there were setbacks. Days when I thought I wasn"t making progress. But each small step forward built on the last.",";",        Now, I run a small business, have meaningful relationships, and while I still experience anxiety sometimes", I have the tools to manage it. If you", re reading this and struggling", please know that recovery is possible. You", re stronger than you think.;`,`        summary: ` two-year journey from debilitating panic attacks to running a successful business and finding peace.",", ``        category: "recovery,",        tags: []nxiety, ", panic-attacks", ", therapy", ", medication, "self-compassion]",        journey: {,  timeframe: "2, years,",",          challenges: []aily panic attacks", ", Agoraphobia", ", Depression, "Social isolation]",          turningPoints: []mergency room visit", ", Starting therapy", ", Finding right medication, "First successful exposure]",          keyLessons: []elfcompassion is crucial", ", Recovery isn\"t linear", ", Professional help works, "Small steps matter]",          helpfulResources: []BT therapy", ", Mindfulness apps", ", Support group, "Exercise routine]",          advice: "Be, patient with yourself. Recovery takes time", but it\", s absolutely possible. Don\"t be afraid to ask for help.", `;`        },        inspiration: {},  hopeRating: 9,          relatabilityScore: 8,          practicalValue: 9,          inspirationalQuote: "You, are braver than you believe, stronger than you seem, and more loved than you know."        },        engagement: {},  views: 2847,          hearts: 456,          bookmarks: 123,          shares: 78,          comments: 89,          helpfulVotes: 234}",        status: "published,  isVerified: true,        isFeatured: "true,        moderationStatus: "approved,",  createdAt: new Date(Date.now() - 2592000000), // 30 days ago,  updatedAt: new Date(Date.now() - 2592000000),        readingTime: 4}      {",  id: "story-2,        authorId: "user-789,        authorName: "Anonymous,  isAnonymous: "true,        title: "One, Year Sober: The Hardest and Best Year of My Life,", `;`        content: `oday marks one year since I had my last drink. 365 days of facing life on life`` terms", without the numbing comfort of alcohol. It", s been the hardest and most rewarding year of my life.',"`;`        I won"t romanticize it - early sobriety was brutal. Everything felt raw and overwhelming. Emotions I had been suppressing for years came flooding back. I had to learn how to socialize, how to cope with stress, how to sleep, how to celebrate - all without alcohol.",        The first 90 days were about survival. One day at a time, sometimes one hour at a time. I attended meetings daily, found a sponsor, and slowly started building a sober network. I discovered that addiction had been just the symptom - underneath were years of unresolved trauma and pain.",        Months 3-6 were about building new habits. I started exercising regularly, picked up old hobbies", and began therapy to address the root causes of my addiction. I also had to grieve the loss of my drinking self and the future I had imagined.","        The second half of the year has been about growth and connection. I"ve repaired relationships with family, made genuine friendships, and discovered interests I never knew I had. Most importantly", I", ve learned to be comfortable in my own skin.',"`;`        To anyone struggling with addiction: recovery is possible. It"s not easy", but it", s worth it. You deserve a life free from the chains of addiction.;`,`;",        summary: ` year of sobriety journey, from brutal early days to discovering a life of genuine connection and growth.",", ``        category: "milestone,",        tags: []ddiction, ", sobriety", ", recovery", ", one-year", ", meetings, "therapy]",        journey: {,  timeframe: "1, year,",",          challenges: []hysical withdrawal", ", Emotional overwhelm", ", Social isolation, "Coping without alcohol]",          turningPoints: []irst 30 days", ", Finding sponsor", ", Starting therapy, "Making sober friends]",          keyLessons: []ne day at a time works", ", Community is essential", ", Addressing root causes is crucial, "Growth takes time]",          helpfulResources: []A meetings", ", Sponsor relationship", ", Therapy, "Sober social groups]",          advice: "Don\, t try to do it alone. Find your people, work the steps, and be patient with the process.";"        },        inspiration: {},  hopeRating: 10,          relatabilityScore: 9,          practicalValue: 8,          inspirationalQuote: "Recovery, is not about becoming a different person, but about becoming the person you were meant to be."        },        engagement: {},  views: 1923,          hearts: 387,          bookmarks: 98,          shares: 56,          comments: 67,          helpfulVotes: 189}",        status: "published,  isVerified: true,        isFeatured: "false,        moderationStatus: "approved,",  createdAt: new Date(Date.now() - 1728000000), // 20 days ago,  updatedAt: new Date(Date.now() - 1728000000),        readingTime: 5}      {",  id: "story-3,        authorId: "user-321,        authorName: "SunriseWarrior,  isAnonymous: "false,        title: "Small, Victory: I Went to the Grocery Store Alone,", `;`        content: `his might seem like nothing to most people, but today I went to the grocery store by myself for the first time in eight months. For someone with severe social anxiety and agoraphobia, this was Mount Everest.`;        It took me three attempts just to get out of the car. My heart was racing, palms sweating", and that familiar voice in my head was listing all the ways this could go wrong. But I remembered what my therapist said: `ou don", t have to feel brave to act brave.",        I made it through the automatic doors (victory #1)`, `rabbed a basket (victory #2), and even asked an employee where to find the pasta sauce (victory #3!). I only needed five items, but I felt like I had conquered the world.        Yes, I had to use breathing exercises in the cereal aisle. Yes, I felt lightheaded at the checkout. But I did it. I bought groceries like a normal person, and I drove home feeling proud instead of defeated.";",        These small victories matter. They add up. Six months ago", I couldn", t answer the door for a delivery. Today, I navigated a busy grocery store. Tomorrow", who knows? Maybe I", ll try the mall.',"        To anyone struggling with anxiety: celebrate every small step. You"re braver than you know.,", `;`        summary: ` small but significant victory of going to the grocery store alone after months of severe social anxiety.",", ``        category: "daily-victory,",        tags: []ocial-anxiety, ", agoraphobia", ", small-victories", ", exposure-therapy, "progress]",        journey: {,  timeframe: "8, months,",",          challenges: []ocial anxiety", ", Agoraphobia", ", Fear of judgment, "Physical symptoms]",          turningPoints: []tarting therapy", ", Learning breathing techniques", ", First small exposure, "Today\'s grocery trip]",          keyLessons: []mall steps count", ", Bravery isn\"t about feeling fearless", ", Celebrate every victory, "Progress isn\'t linear]",          helpfulResources: []herapy, ", Breathing exercises", ", Gradual exposure, "Self-compassion]",          advice: "Start, small, be patient with yourself, and celebrate every tiny step forward.", `;`        },        inspiration: {},  hopeRating: 8,          relatabilityScore: 9,          practicalValue: 7,          inspirationalQuote: "You don\", t have to feel brave to act brave."        },        engagement: {},  views: 1456,          hearts: 298,          bookmarks: 67,          shares: 34,          comments: 45,          helpfulVotes: 156}",        status: "published,  isVerified: false,        isFeatured: "false,        moderationStatus: "approved,",  createdAt: new Date(Date.now() - 864000000), // 10 days ago,  updatedAt: new Date(Date.now() - 864000000),        readingTime: 2}      {",  id: "story-4,        authorId: "user-654,        authorName: "PhoenixRising,  isAnonymous: "false,        title: "Turning, My Breakdown into a Breakthrough,", `;`        content: `hey say you have to hit rock bottom before you can build back up. For me, rock bottom was a complete mental breakdown at age 35, losing my job, and ending up in the psychiatric ward for two weeks.        I had been struggling with depression for years but had become expert at hiding it. High-functioning depression, they call it. To everyone else, I was successful, put-together, always helpful. Inside, I was drowning.        The breakdown felt like failure at the time, but looking back, it was exactly what I needed. It forced me to stop pretending everything was fine and finally get the help I desperately needed.";",        In the hospital, I met people from all walks of life who were fighting similar battles. I learned that mental illness doesn`` discriminate - it affects CEOs and cashiers", teachers and teenagers. This was both humbling and liberating.",";",        Recovery wasn"t instant or easy. It involved changing medications, intensive therapy, and completely restructuring my life. I had to learn to set boundaries, ask for help, and prioritize my mental health over productivity.",";",        Two years later", I", m not the same person who had that breakdown. I'm better. I'm more authentic, more compassionate, and infinitely more self-aware. I now work as a peer counselor, helping others navigate their own mental health journeys.",        Sometimes what feels like the end is actually the beginning.;`,        summary: ` mental breakdown that became the catalyst for authentic recovery and a new purpose in life.",", ``        category: "breakthrough,",        tags: []epression, ", breakdown", ", hospitalization", ", recovery", ", peer-counselor, "purpose]",        journey: {,  timeframe: "2 years",",          challenges: []ighfunctioning depression", ", Perfectionism", ", Isolation", ", Stigma, "Career loss]',          turningPoints: []sychiatric hospitalization", ", Meeting other patients", ", Medication adjustment, "Therapy breakthrough]',          keyLessons: []sking for help is strength", ", Authenticity beats perfection", ", Mental health comes first, "Vulnerability creates connection]',          helpfulResources: []npatient treatment", ", Therapy", ", Medication", ", Peer support, "Career counseling]',          advice: "Your, breakdown might be your breakthrough in disguise. Don\", t be afraid to fall apart - sometimes that\"s how we rebuild stronger.", `;`        },        inspiration: {},  hopeRating: 10,          relatabilityScore: 8,          practicalValue: 9,          inspirationalQuote: "Sometimes, what feels like the end is actually the beginning."        },        engagement: {},  views: 3456,          hearts: 567,          bookmarks: 189,          shares: 123,          comments: 98,          helpfulVotes: 345}",        status: "published,  isVerified: true,        isFeatured: "true,        moderationStatus: "approved,",  createdAt: new Date(Date.now() - 1209600000), // 14 days ago,  updatedAt: new Date(Date.now() - 1209600000),        readingTime: 6      }    ]    setStories(mockStories)    // Mock comments for story-1;    setStoryComments(new Map([]];"      []tory-1", []];"        {  id: "comment-1,",          storyId: "story-1,          authorId: "user-999,          authorName: "GratefulReader,  isAnonymous: "false,          content: "Thank, you so much for sharing this. I\", m currently struggling with panic attacks and your story gives me hope that things can get better.",          type: "gratitude,  createdAt: new Date(Date.now() - 86400000),          hearts: 23,          isHelpful: "true}"        {",  id: "comment-2,          storyId: "story-1,          authorId: "user-888,          authorName: "Anonymous,  isAnonymous: "true,          content: "I, had a similar experience with the ER visit being my wake-up call. It\", s amazing how that moment of crisis can become the first step toward healing.",",          type: "shared-experience,",  createdAt: new Date(Date.now() - 43200000),          hearts: 18,          isHelpful: true        }      ]]    ]))  }", []);",  const storyTemplates: StoryTemplate[ ] []    {  id: "template-recovery,",      name: "Recovery, Journey",      description: "Share, your path from struggle to healing",      category: "recovery,      prompts: []        {",  section: "The, Beginning,",",          questions: []hen did you first realize you needed help?", ", What was your lowest point?, "How did your struggles affect your daily life?]',          placeholder: "Describe, ", where your journey began...};"        {  section: "The Turning Point",",          questions: []hat made you decide to seek help?", ", Who or what inspired you to change?, "What was your first step?]',          placeholder: "Share, what changed everything...};"        {  section: "The Journey",",          questions: []hat challenges did you face in recovery?", ", What resources helped you most?, "How did you handle setbacks?]',          placeholder: "Tell, us about your path to healing...};"        {  section: "Where, You Are Now",          questions: []ow has your life changed?", ", What does recovery look like for you?, "What advice would you give?]',          placeholder: "Share where you are today...}"      ],      estimatedTime: 30}"    {",  id: "template-milestone,      name: "Milestone, Celebration",      description: "Celebrate, a significant achievement in your journey",      category: "milestone,      prompts: []        {",  section: "The Milestone",",          questions: []hat milestone are you celebrating?", ", Why is this achievement significant?, "How long did it take to reach this point?]',          placeholder: "Describe your achievement...}"        {",  section: "The Journey to Get Here",",          questions: []hat challenges did you overcome?", ", Who supported you along the way?, "What kept you motivated?]',          placeholder: "Share your journey to this milestone...}"        {",  section: "Lessons, Learned",          questions: []hat did you learn about yourself?", ", How have you grown?, "What would you do differently?]',          placeholder: "Reflect, on your growth...};"        {  section: "Looking, Forward",          questions: []hat\s next for you?", ", How will you maintain this progress?, "What advice do you have for others?]',          placeholder: "Share your hopes for the future...}"      ],      estimatedTime: 20}"    {",  id: "template-daily-victory,      name: "Daily, Victory",      description: "Share a small but meaningful accomplishment",      category: "daily-victory,      prompts: []        {",  section: "The Victory",",          questions: []hat did you accomplish today?", ", Why was this challenging for you?, "How did it feel to succeed?]',          placeholder: "Describe your victory...}"        {",  section: "The Challenge",",          questions: []hat made this difficult?", ", Have you tried this before?, "What was different this time?]',          placeholder: "Share what made this challenging...}"        {",  section: "How, You Did It",          questions: []hat strategies did you use?", ", Who or what helped you?, "What kept you going?]',          placeholder: "Explain, how you succeeded...}", `;`        {  section: "Encouragement, for Others, questions: []hat would you tell someone facing similar challenges?", ", Why do small victories matter?, "What\'s your next small goal?]",          placeholder: "Offer, encouragement to others...}"      ],      estimatedTime: 15    }  ]  const filteredStories = React.useMemo(() => stories.filteredStories = stories.filter(story => {},    const matchesSearch = story.title.toLowerCase().includes(searchQuery.toLowerCase()) ||, []tories]);                         story.content.toLowerCase().includes(searchQuery.toLowerCase()) ||                         story.tags.some(tag = > tag.toLowerCase().includes(searchQuery.toLowerCase())`;    const matchesCategory = categoryFilter === "all", ;";",    return matchesSearch && matchesCategory && story.status = == "published;"  })",", `;`  const sortedStories = []..filteredStories].sort((a", b) => {}",",    switch (sortBy) {},      case 'popular':,        return (b.engagement.hearts + b.engagement.bookmarks) - (a.engagement.hearts + a.engagement.bookmarks      case 'inspiring':,        return b.inspiration.hopeRating - a.inspirationhopeRating      case 'helpful':,        return b.engagement.helpfulVotes - a.engagement.helpfulVotes"      case 'default':,',  default:        return b.createdAt.getTime() - a.createdAt.getTime()});  const handleCreateStory = () => {},    if (!newStory.title.trim() || !newStory.content.trim()) return const story: Story},  id: ``tory-${Date.now(}",",      authorId: currentUser.id,`      authorName: newStoryisAnonymous ? ``nonymous" : currentUser.name",      isAnonymous: newStoryisAnonymous,      title: newStorytitle,      content: newStorycontent,      summary: newStorysummary || newStory.content.substring(0", 200) + ", ...,";",      category: newStorycategory as any, tags: newStory.tags.split(, `).map(tag = > tag.trim()).filter(Boolean),", `;`      journey: newStoryjourney,      inspiration: {},  hopeRating: 8,        relatabilityScore: 7,        practicalValue: 8,        inspirationalQuote: newStoryinspirationalQuote      },      engagement: {},  views: 0,        hearts: 0,        bookmarks: 0,        shares: 0,        comments: 0,        helpfulVotes: 0}",      status: "published,  isVerified: false,      isFeatured: "false,", `;`      moderationStatus: "pending,",  createdAt: new Date(),      updatedAt: new Date()",",      readingTime: Math.ceil(newStory.content.split(")length / 200)");"    },    setStories(prev = > []tory, ...prev]`;    setShowCreateStory(false)    setNewStory({},  title:  ,      content: , ",", `;`      summary: ",",  category: "recovery,      tags: ",",", `;`  isAnonymous: "false,",      journey: {  timeframe: ",",  challenges: [,]        turningPoints: [,]        keyLessons: [,]        helpfulResources: [,]        advice: "}",      inspirationalQuote: ",",    "});",    alert("Your story has been submitted and is being reviewed. Thank you for sharing!");"  },  const handleComment = () => {},    if (!selectedStory || !newComment.content.trim()) return const comment: StoryComment},  id: ``omment-${Date.now(}";",      storyId: selectedStoryid,      authorId: currentUser.id,`;",      authorName: newCommentisAnonymous ? ``nonymous" : currentUser.name,", `;`      isAnonymous: newCommentisAnonymous,      content: newCommentcontent,      type: newCommenttype as any,      createdAt: new Date(),      hearts: 0,      isHelpful: false    },    const existingComments = storyComments.get(selectedStory.id) || [];    setStoryComments(new Map(storyComments.set(selectedStory.id, []..existingComments, comment])))        // Update story comment count    setStories(prev = > prev.map(story => , story.id = == selectedStory.id ;,        ? { ...story, engagement: { ...story.engagement, comments: story.engagementcomments + 1 }" }`;`        : story    ))    setNewComment({ content: ", type: ", comment", isAnonymous: false })"  },  const renderStoryCard = (story: Story => (", ", `;`    <div key={story.id"}, className={",story-card $story.isFeatured ? ``eatured :"}>",", `;`      {story.isFeatured && ("}"        <div className="featured-badge">"          <Star size={14} />          <span>Featured Story</span>        </div>      )}      <div className="story-header">"        <div className="story-meta">"          <div className="author-info">"            {story.isAnonymous ? ("}"              <div className="anonymous-author">"                <User size={20"} />"                <span>Anonymous</span>              </div>            ) : ("              <div className="named-author">"                <span className="author-name">{story.authorName"}</span>"                {story.isVerified && ("}"                  <Shield className="verified-badge", size={16} />"                )}              </div>            )"}"          </div>          <div className="story-details">"            <span className="reading-time">"              <Clock size={14} />              {story.readingTime"}, min read"            </span>            <span className="post-date">"              <Calendar size={14} />              {story.createdAt.toLocaleDateString()}            </span>          </div>        </div>        <span className={category-badge $story.category"}>",", `;`          {story.category.replace(```, `)}        </span>      </div>      <h2 ";",        className="story-title",        onClick={ () =>",", `;`          setSelectedStory(story`;          setActiveView("story-detail" );"        
}>";"        {story.title"}"      </h2>"      <p className="story-summary">{story.summary"}</p>","      <div className="story-tags">";"        { story.tags.slice(0`, `).map(tag = > (" }"          <span key={tag"}, className="tag">#{tag}</span>"        ))"}"        {story.tags.length > 4 && ("}"          <span className="more-tags">+{story.tags.length - 4}, more</span>", ", `;`        )"}"      </div>"      <div className="inspiration-indicators">"        <div className="indicator">"          <Lightbulb size={16} />          <span>Hope: {story.inspiration.hopeRating}/10</span>"        </div>        <div className="indicator">"          <Target size={16} />          <span>Practical: {story.inspiration.practicalValue}/10</span>"        </div>        <div className="indicator">"          <Heart size={16} />          <span>Relatable: {story.inspiration.relatabilityScore}/10</span>"        </div>      </div>"      <div className="story-engagement">"        <div className="engagement-stats">"          <span><Eye size={16} /> {story.engagement.views}</span>          <span><Heart size={16} /> {story.engagement.hearts}</span>          <span><MessageCircle size={16} /> {story.engagement.comments}</span>          <span><Bookmark size={16} /> {story.engagement.bookmarks"}</span>"        </div>"        <div className="story-actions">"          <button className="action-btn", heart", >"            <Heart size={16"} />",            Give Heart          </button>          <button className="action-btn", bookmark", >"            <Bookmark size={16"} />",            Save          </button>          <button className="action-btn share">"            <Share2 size={16"} />",            Share          </button>        </div>      </div>    </div>  )  const renderStoryDetail = () => {},    if (!selectedStory) return null    const comments = storyComments.get(selectedStory.id) || [];    return (      <div className="story-detail">"        <div className="story-detail-header">"          <button ";",            onClick={() => setActiveView("discover")}",            className="back-btn"          >            ← Back to Stories          </button>        </div>"        <article className="story-content">"          <header className="story-article-header">"            {selectedStory.isFeatured && ("}"              <div className="featured-indicator">"                <Star size={20} />                <span>Featured Story</span>              </div>            )}            <div className="story-meta-detail">"              <div className="author-section">"                {selectedStory.isAnonymous ? ("}"                  <div className="anonymous-author">"                    <div className="author-avatar">"                      <User size={40"} />"                    </div>                    <div className="author-info">"                      <span className="author-name">Anonymous Community Member</span>"                      <span className="author-desc">Sharing their journey</span>"                    </div>                  </div>                ) : ("                  <div className="named-author">"                    <div className="author-avatar">"                      {selectedStory.authorAvatar ? (}                        <img src={selectedStory.authorAvatar}, alt={selectedStory.authorName} />                      ) : ("                        <User size={40} />                      )"}"                    </div>                    <div className="author-info">"                      <span className="author-name">"                        {selectedStory.authorName"}"                        {selectedStory.isVerified && ("}"                          <Shield className="verified-badge", size={16} />"                        )"}"                      </span>                      <span className="author-desc">Mental health advocate</span>"                    </div>                  </div>                )"}"              </div>"              <div className="story-metadata">"                <span className={category-badge $selectedStory.category"}>",", `;`                  {selectedStory.category.replace(```, `)}                </span>                <span className="reading-time">";"                  <Clock size={16} />                  {selectedStory.readingTime"}, min read"                </span>                <span className="publish-date">"                  <Calendar size={16} />                  {selectedStory.createdAt.toLocaleDateString()"}"                </span>              </div>            </div>"            <h1 className="story-title-detail">{selectedStory.title"}</h1>","            <div className="story-engagement-header">"              <div className="engagement-stats">"                <span><Eye size={18} /> {selectedStory.engagement.views}, views</span>                <span><Heart size={18} /> {selectedStory.engagement.hearts}, hearts</span>                <span><MessageCircle size={18} /> {selectedStory.engagement.comments}, comments</span>                <span><ThumbsUp size={18} /> {selectedStory.engagement.helpfulVotes"}, helpful</span>"              </div>"              <div className="story-actions-header">"                <button className="action-btn-large", heart", >"                  <Heart size={20"} />",                  Give Heart                </button>                <button className="action-btn-large", bookmark", >"                  <Bookmark size={20"} />",                  Save Story                </button>                <button className="action-btn-large", share", >"                  <Share2 size={20"} />",                  Share                </button>                <button className="action-btn-large helpful">"                  <ThumbsUp size={20"} />",                  Helpful                </button>              </div>            </div>          </header>"          <div className="story-body">"            <div className="story-text">"              {selectedStory.content.split('n\n')map((paragraph, index) => ("}"                <p key={index}>{paragraph}</p>              ))"}"            </div>"            {selectedStory.inspiration.inspirationalQuote && ("}"              <blockquote className="inspirational-quote">"                <Quote size={24"} />"                <p>"selectedStory.inspiration.inspirationalQuote"}</p>"              </blockquote>            )}            <div className="story-tags-detail">"              { selectedStory.tags.map(tag = > ("  );"                <span key={tag"}, className="tag">#{tag}</span>"              ))"}"            </div>          </div>"          <div className="journey-details">"            <h2>Journey Insights</h2>            "            <div className="journey-grid">"              <div className="journey-section">"                <h3>                  <Mountain size={20} />                  Challenges Overcome                </h3>                <ul>                  {selectedStory.journey.challenges.map((challenge, index) => (}                    <li key={index}>{challenge}</li>                  ))"}"                </ul>              </div>"              <div className="journey-section">"                <h3>                  <Sunrise size={20} />                  Turning Points                </h3>                <ul>                  {selectedStory.journey.turningPoints.map((point, index) => (}                    <li key={index}>{point}</li>                  ))"}"                </ul>              </div>"              <div className="journey-section">"                <h3>                  <Lightbulb size={20} />                  Key Lessons                </h3>                <ul>                  {selectedStory.journey.keyLessons.map((lesson, index) => (}                    <li key={index}>{lesson}</li>                  ))"}"                </ul>              </div>"              <div className="journey-section">"                <h3>                  <BookOpen size={20} />                  Helpful Resources                </h3>                <ul>                  {selectedStory.journey.helpfulResources.map((resource, index) => (}                    <li key={index}>{resource}</li>                  ))"}"                </ul>              </div>            </div>"            {selectedStory.journey.advice && ("}"              <div className="advice-section">"                <h3>                  <Sparkles size={20"} />",                  Advice for Others                </h3>                <p className="advice-text">"selectedStory.journey.advice"}</p>"              </div>            )"}"          </div>"          <div className="inspiration-metrics">"            <h2>Story Impact</h2>            <div className="metrics-grid">"              <div className="metric">"                <div className="metric-icon", hope", >"                  <Lightbulb size={24"} />"                </div>                <div className="metric-info">"                  <span className="metric-value">{selectedStory.inspiration.hopeRating"}/10</span>"                  <span className="metric-label">Hope Rating</span>"                </div>              </div>              <div className="metric">"                <div className="metric-icon", practical", >"                  <Target size={24"} />"                </div>                <div className="metric-info">"                  <span className="metric-value">{selectedStory.inspiration.practicalValue"}/10</span>"                  <span className="metric-label">Practical Value</span>"                </div>              </div>              <div className="metric">"                <div className="metric-icon relatable">"                  <Heart size={24"} />"                </div>                <div className="metric-info">"                  <span className="metric-value">{selectedStory.inspiration.relatabilityScore"}/10</span>"                  <span className="metric-label">Relatability</span>"                </div>              </div>            </div>          </div>        </article>"        <section className="comments-section">"          <h2>Community Response ({comments.length"})</h2>",          "          <div className="comment-form">"            <h3>Share Your Thoughts</h3>            <div className="comment-type-selector">"              <label className="comment-type">"                <input                  type = "radio",                  value="comment",                  checked={newComment.type === "comment}",                  onChange={(e) = /> setNewComment( ...newComment, type: e.targetvalue as any)"}"                />                <span>Comment</span>              </label>              <label className="comment-type">"                <input                  type = "radio",                  value="gratitude",                  checked={newComment.type === "gratitude}",                  onChange={(e) = /> setNewComment( ...newComment, type: e.targetvalue as any)"}"                />                <span>Gratitude</span>              </label>              <label className="comment-type">"                <input                  type = "radio",                  value="shared-experience",                  checked={newComment.type === "shared-experience}",                  onChange={(e) = /> setNewComment( ...newComment, type: e.targetvalue as any)"}"                />                <span>Shared Experience</span>              </label>            </div>            <textarea              placeholder={};                newComment.type = == "gratitude", ;",                newComment.type = == "shared-experience",              value={newComment.content}              onChange={(e) => setNewComment( ...newComment, content: e.targetvalue)}              rows={4"}"            />            <div className="comment-options">"              <label className="anonymous-toggle">"                <input                  type = "checkbox",                  checked={newComment.isAnonymous}                  onChange={(e) = /> setNewComment( ...newComment", isAnonymous: e.target.checked)}                />                Comment anonymously              </label>              <button onClick={handleComment"}, className="comment-btn">",                Share Response              </button>            </div>          </div>"          <div className="comments-list">"            { comments.map(comment = > (" };"              <div key={comment.id}, className={comment-card $comment.type}>                <div className="comment-header">"                  <div className="comment-author">"                    <span className="author-name">"                      {comment.isAnonymous ? '👤 Anonymous' : comment.authorName}'                    </span>                    <span className={comment-type-badge $comment.type"}>", `;`                      {comment.type = == ``ratitude" && ", 💝 Gratitude"};"                      { comment.type = == "shared-experience",  }";"                      { comment.type = == "comment",   );"                    </span>                  </div>                  <span className="comment-time">"                    {comment.createdAt.toLocaleString()"}"                  </span>                </div>                <p className="comment-content">{comment.content"}</p>"                <div className="comment-actions">"                  <button className="comment-action">"                    <Heart size={14} />                    <span>{comment.hearts"}</span>"                  </button>                  <button className="comment-action">"                    <MessageCircle size={14"} />",                    Reply                  </button>                  {comment.isHelpful && ("}"                    <span className="helpful-badge">"                      <CheckCircle size={14} />                      Helpful                    </span>                  )}                </div>              </div>            ))}          </div>        </section>      </div>    )  },  return(;    <div className="story-sharing">"      { activeView = == "discover",  );"        <div className="discover-view">"          <div className="page-header">"            <h1>Recovery Stories</h1>            <p>Real journeys of hope, healing", and transformation</p>"          </div>"          <div className="story-controls">"            <div className="search-and-filters">"              <div className="search-bar">"                <Search className="search-icon" />"                <input                  type = "text",                  placeholder="Search", stories by title, content", or tags...",                  value={searchQuery}                  onChange={(e) = /> setSearchQuery(e.target.value)"}"                />              </div>"              <div className="filters">"                <select                   value={categoryFilter}                  onChange={(e) => setCategoryFilter(e.target.value)"}"                >                  <option value = "all", >All Categories</option>"                  <option value = "recovery", >Recovery Journeys</option>"                  <option value = "breakthrough", >Breakthroughs</option>"                  <option value = "milestone", >Milestones</option>"                  <option value = "setback-overcome", >Setbacks Overcome</option>"                  <option value = "daily-victory", >Daily Victories</option>"                  <option value = "inspiration", >Inspiration</option>"                </select>                <select                   value={sortBy}                  onChange={(e) => setSortBy(e.target.value as any)"}"                >                  <option value = "recent", >Most Recent</option>"                  <option value = "popular", >Most Popular</option>"                  <option value = "inspiring", >Most Inspiring</option>"                  <option value = "helpful", >Most Helpful</option>"                </select>              </div>            </div>"            <div className="action-buttons">"              <button ",                onClick={() => setShowCreateStory(true)"}",                className="share-story-btn"              >                <Plus size={16"} />",                Share Your Story              </button>              {currentUser.storiesShared > 0 && (}                <button ",                  onClick={() => setActiveView("my-stories")}",                  className="my-stories-btn"                >                  My Stories ({currentUser.storiesShared})                </button>              )"}"            </div>          </div>"          <div className="featured-stories">"            <h2>Featured Stories</h2>            <div className="featured-grid">";"              {sortedStories}                .filter(story = > story.isFeatured`;                .slice(0`, `)                .map(renderStoryCard)"}"            </div>          </div>";"          <div className="all-stories">"            <h2>Community Stories</h2>            <div className="stories-grid">"              {sortedStories.map(renderStoryCard)}            </div>          </div>        </div>      )}      { activeView = == "story-detail",  };"      {showCreateStory && ("}"        <div className="create-story-modal">"          <div className="modal-content">"            <div className="modal-header">"              <h2>Share Your Story</h2>              <button onClick={() => setShowCreateStory(false)"}, className="close-btn">"                <X />              </button>            </div>"            <div className="story-form">"              <div className="form-section">"                <h3>Choose a Template (Optional)</h3>                <div className="template-options">"                  {storyTemplates.map(template  => ("                    <div tabIndex={0}, ";",                      key={template.id"}",                      className={template-card $selectedTemplate?.id === template.id ? ``elected :}                      onClick={() => setSelectedTemplate(selectedTemplate?.id === template.id ? null : template)}                    >                      <h4>{template.name}</h4>                      <p>{template.description"}</p>"                      <span className="template-time">~{template.estimatedTime}, min</span>"                    </div>                  ))"}"                </div>              </div>";"              <div className="form-section">"                <label>Story Category</label>                <select                   value={newStory.category}                  onChange={(e) => setNewStory( ...newStory, category: e.targetvalue)"}"                >                  <option value = "recovery", >Recovery Journey</option>"                  <option value = "breakthrough", >Breakthrough</option>"                  <option value = "milestone", >Milestone</option>"                  <option value = "setback-overcome", >Setback Overcome</option>"                  <option value = "daily-victory", >Daily Victory</option>"                  <option value = "inspiration", >Inspiration</option>"                </select>              </div>"              <div className="form-section">"                <label>Title</label>                <input                  type = "text",                  placeholder="Give", your story a compelling title...",                  value={newStory.title}                  onChange={(e) = /> setNewStory( ...newStory", title: e.target.value)"}"                />              </div>"              <div className="form-section">"                <label>Your Story</label>                <textarea                  placeholder="Share", your journey, challenges, victories, and insights...",                  value={newStory.content}                  onChange={(e) => setNewStory( ...newStory", content: e.target.value)}                  rows={12"}"                />              </div>"              <div className="form-section">"                <label>Summary (Optional)</label>                <textarea                  placeholder="Brief", summary of your story for previews...",                  value={newStory.summary}                  onChange={(e) => setNewStory( ...newStory", summary: e.target.value)}                  rows={3"}"                />              </div>"              <div className="form-section">";"                <label>Tags</label>                <input                  type = "text",                  placeholder="e.g.`,` anxiety, therapy, recovery, hope (comma-separated);",                  value={newStory.tags}";",                  onChange={(e) = /> setNewStory( ...newStory", tags: e.target.value)"}"                />              </div>"              <div className="form-section">"                <label>Journey Timeline</label>                <input                  type = "text",                  placeholder="e.g.,", 2 years, 6 months, ongoing...",                  value={newStory.journey.timeframe}                  onChange={ {(e) = /> setNewStory("                    ...newStory                    journey: ...newStory.journey, timeframe: e.targetvalue
 );"                  })"}"                />              </div>"              <div className="form-section">"                <label>Key Advice for Others</label>                <textarea                  placeholder="What", advice would you give to someone facing similar challenges?",                  value={newStory.journey.advice}                  onChange={ {(e) => setNewStory("                    ...newStory                    journey: ...newStory.journey, advice: e.targetvalue
 );"                  })},                  rows={3"}"                />              </div>"              <div className="form-section">"                <label>Inspirational Quote (Optional)</label>                <input                  type = "text",                  placeholder="A", quote that represents your journey...",                  value={newStory.inspirationalQuote}                  onChange={(e) = /> setNewStory( ...newStory", inspirationalQuote: e.target.value)"}"                />              </div>"              <div className="form-options">"                <label className="anonymous-toggle">"                  <input                    type = "checkbox",                    checked={newStory.isAnonymous}                    onChange={(e) = /> setNewStory( ...newStory", isAnonymous: e.target.checked)"}"                  />                  Share anonymously                </label>"                <div className="form-actions">"                  <button onClick={() => setShowCreateStory(false)"}, className="cancel-btn">",                    Cancel                  </button>                  <button onClick={handleCreateStory"}, className="submit-btn">",                    Share Story                  </button>                </div>              </div>            </div>          </div>        </div>      )}      <style jsx>{}        .story-sharing {},          max-width: 1400px,  margin: 0 auto,  padding: 20px        }        .page-header {},          text-align: center          margin-bottom: 40px        }        .page-header h1 {},  margin: 0 0 10px 0          font-size: 25em,  background: linear-gradient135deg, #667eea 0%, #764ba2 100%)          -webkit-background-clip: text          -webkit-text-fill-color: transparent        }        .page-header p {},  color: #666,          font-size: 11em,  margin: 0        }        .story-controls {},          margin-bottom: 40px        }        .search-and-filters {},  display: 'flex,  gap: 20px          margin-bottom: 20px          align-items: center          flex-wrap: wrap        }        .search-bar {},  flex: 1,  position: relative,          min-width: 300px        }        .search-icon {},  position: absolute,  left: 15px,  top: 50,  transform: translateY(-50%,  width: 20px,  height: 20px,  color: #666}        .search-bar input {},  width: 100,  padding: 15px 15px 15px 45px,  border: 2px solid #e5e5e5          border-radius: 12px          font-size: 16px,  transition: bordercolor 0.3s        }        .search-bar input:focus {},  outline: none          border-color: #667eea        }        .filters {},  display: flex,  gap: 15px        }        .filters select {},  padding: 15px,  border: 2px solid #e5e5e5          border-radius: 12px          font-size: 14px,  background: white,  cursor: pointer        }        .action-buttons {},  display: flex,  gap: 15px          justify-content: center        }        .share-story-btn,        .my-stories-btn {},  display: flex          align-items: center,  gap: 8px,  padding: 15px 25px,  border: none          border-radius: 12px          font-size: 16px,  cursor: pointer,  transition: all 0.3s        }        .share-story-btn {},  background: #667eea,  color: white}        .share-story-btn:hover {},  background: #5a67d8        }        .my-stories-btn {},  background: #f0f0f0,  color: #333}        .my-stories-btn:hover {},  background: #e0e0e0        }        .featured-stories,        .all-stories {},          margin-bottom: 40px        }        .featured-stories h2,        .all-stories h2 {},  margin: 0 0 25px 0,  color: #333,          font-size: 18em        }        .featured-grid {},  display: grid          grid-template-columns: repeat(autofit, minmax(600px, 1fr)),  gap: 25px          margin-bottom: 40px        }        .stories-grid {},  display: grid          grid-template-columns: repeat(autofill, minmax(400px, 1fr)),  gap: 25px        }        .story-card {},  background: white          border-radius: 16px,  padding: 25px          box-shadow: 0 2px 15px rgba(0, 0, 0, 0.08),  transition: all 0.3s,  position: relative,          border-left: 4px solid #667eea        }        .story-card:hover {},  transform: translateY(-2px          box-shadow: 0 4px 25px rgba(0, 0, 0, 0.12)        }        .story-card.featured {},          border-left-color: #fbbf24,  background: linear-gradient135deg, #fffbeb 0%, #ffffff 100%)        }        .featured-badge {},  position: absolute,  top: 15px,  right: 15px,  display: flex          align-items: center,  gap: 5px,  padding: 5px 12px,  background: #fbbf24,  color: white,          border-radius: 12px          font-size: 12px          font-weight: 600        }        .story-header {},  display: flex          justify-content: spacebetween          align-items: flexstart          margin-bottom: 15px        }        .story-meta {},  flex: 1        }        .author-info {},          margin-bottom: 8px        }        .anonymous-author,        .named-author {},  display: flex          align-items: center,  gap: 8px,  color: #666}        .author-name {},          font-weight: 600,  color: #333}        .verified-badge {},  color: #667eea}        .story-details {},  display: flex,  gap: 15px,  color: #888,          font-size: 13px        }        .story-details span {},  display: flex          align-items: center,  gap: 4px        }        .category-badge {},  padding: 6px 12px          border-radius: 20px          font-size: 12px          font-weight: 600          text-transform: capitalize        }        .category-badge.recovery {},  background: #dcfce7,  color: #166534}        .category-badge.breakthrough {},  background: #fef3c7,  color: #92400e}        .category-badge.milestone {},  background: #dbeafe,  color: #1e40af}        .category-badge.setback-overcome {},  background: #f3e8ff,  color: #6b21a8}        .category-badge.daily-victory {},  background: #fce7f3,  color: #be185d}        .category-badge.inspiration {},  background: #ecfdf5,  color: #065f46}        .story-title {},  margin: 15px 0,  color: #333,          font-size: 14em          line-height: 13,  cursor: pointer,  transition: color 0.3s        }        .story-title:hover {},  color: #667eea}        .story-summary {},  color: #666,          line-height: 16          margin-bottom: 15px        }        .story-tags {},  display: flex,  gap: 8px          flex-wrap: wrap          margin-bottom: 15px        }        .tag {},  background: #f0f0f0,  color: #666,  padding: 4px 8px          border-radius: 12px          font-size: 12px        }        .more-tags {},  color: #888,          font-size: 12px          font-style: italic        }        .inspiration-indicators {},  display: flex,  gap: 15px,  margin: 15px 0,  padding: 15px 0          border-top: 1px solid #e5e5e5          border-bottom: 1px solid #e5e5e5        }        .indicator {},  display: flex          align-items: center,  gap: 5px,  color: #666,          font-size: 13px        }        .story-engagement {},  display: flex          justify-content: spacebetween          align-items: center        }        .engagement-stats {},  display: flex,  gap: 15px,  color: #888,          font-size: 13px        }        .engagement-stats span {},  display: flex          align-items: center,  gap: 4px        }        .story-actions {},  display: flex,  gap: 10px        }        .action-btn {},  display: flex          align-items: center,  gap: 5px,  padding: 6px 12px,  background: none,  border: 1px solid #e5e5e5          border-radius: 8px,  color: #666,  cursor: pointer          font-size: 13px,  transition: all 0.3s        }        .action-btn:hover {},          border-color: #667eea,  color: #667eea}        .action-btn.heart:hover {},          border-color: #ef4444,  color: #ef4444,  background: #fef2f2        }        /* Story Detail Styles */        .story-detail {},          max-width: 1000px,  margin: 0 auto        }        .story-detail-header {},          margin-bottom: 30px        }        .back-btn {},  padding: 10px 20px,  background: #f0f0f0,  border: none          border-radius: 8px,  cursor: pointer,  color: #666,  transition: background 0.3s        }        .back-btn:hover {},  background: #e0e0e0        }        .story-content {},  background: white          border-radius: 16px,  padding: 40px          margin-bottom: 30px          box-shadow: 0 2px 15px rgba(0, 0, 0, 0.08)        }        .story-article-header {},          margin-bottom: 40px        }        .featured-indicator {},  display: flex          align-items: center,  gap: 8px,  color: #fbbf24,          font-weight: 600          margin-bottom: 20px        }        .story-meta-detail {},  display: flex          justify-content: spacebetween          align-items: center          margin-bottom: 25px        }        .author-section {},  display: flex,  gap: 15px          align-items: center        }        .author-avatar {},  width: 60px,  height: 60px,          border-radius: 50,  background: #f0f0f0,  display: flex          align-items: center          justify-content: center,  color: #666}        .author-avatar img {},  width: 100,  height: 100,          border-radius: 50          object-fit: cover        }        .author-info {},  display: flex          flex-direction: column,  gap: 4px        }        .author-name {},          font-weight: 600,  color: #333,  display: flex          align-items: center,  gap: 8px        }        .author-desc {},  color: #666,          font-size: 14px        }        .story-metadata {},  display: flex,  gap: 15px          align-items: center        }        .story-metadata span {},  display: flex          align-items: center,  gap: 5px,  color: #666,          font-size: 14px        }        .story-title-detail {},  margin: 25px 0,  color: #333,          font-size: 25em          line-height: 12        }        .story-engagement-header {},  display: flex          justify-content: spacebetween          align-items: center,  padding: 20px 0          border-top: 1px solid #e5e5e5          border-bottom: 1px solid #e5e5e5          margin-bottom: 30px        }        .story-engagement-header .engagement-stats {},  display: flex,  gap: 20px,  color: #666}        .story-engagement-header .engagement-stats span {},  display: flex          align-items: center,  gap: 5px        }        .story-actions-header {},  display: flex,  gap: 10px        }        .action-btn-large {},  display: flex          align-items: center,  gap: 8px,  padding: 10px 15px,  background: none,  border: 1px solid #e5e5e5          border-radius: 10px,  color: #666,  cursor: pointer          font-size: 14px,  transition: all 0.3s        }        .action-btn-large:hover {},          border-color: #667eea,  color: #667eea}        .action-btn-large.heart:hover {},          border-color: #ef4444,  color: #ef4444,  background: #fef2f2        }        .action-btn-large.helpful:hover {},          border-color: #22c55e,  color: #22c55e,  background: #f0fdf4        }        .story-body {},          margin-bottom: 40px        }        .story-text {},          font-size: 18px          line-height: 18,  color: #333,          margin-bottom: 30px        }        .story-text p {},          margin-bottom: 20px        }        .inspirational-quote {},  background: #f8f9ff          border-left: 4px solid #667eea,  padding: 25px,  margin: 30px 0          border-radius: 0 12px 12px 0,  position: relative}        .inspirational-quote svg {},  position: absolute,  top: 15px,  left: 15px,  color: #667eea,  opacity: 03        }        .inspirational-quote p {},  margin: 0          font-size: 20px          font-style: italic,  color: #333,          text-align: center          padding-left: 30px        }        .story-tags-detail {},  display: flex,  gap: 10px          flex-wrap: wrap          margin-bottom: 30px        }        .journey-details {},  background: #f7f7f7          border-radius: 12px,  padding: 30px          margin-bottom: 30px        }        .journey-details h2 {},  margin: 0 0 25px 0,  color: #333}        .journey-grid {},  display: grid          grid-template-columns: repeat(autofit, minmax(250px, 1fr)),  gap: 25px          margin-bottom: 25px        }        .journey-section h3 {},  display: flex          align-items: center,  gap: 8px,  margin: 0 0 15px 0,  color: #333,          font-size: 11em        }        .journey-section ul {},  margin: 0          padding-left: 20px        }        .journey-section li {},  color: #666,  margin: 8px 0          line-height: 15        }        .advice-section {},          padding-top: 25px          border-top: 1px solid #e5e5e5        }        .advice-section h3 {},  display: flex          align-items: center,  gap: 8px,  margin: 0 0 15px 0,  color: #333}        .advice-text {},          font-size: 18px          font-style: italic,  color: #667eea,          text-align: center,  margin: 0,  padding: 20px,  background: white          border-radius: 12px        }        .inspiration-metrics {},  background: #f7f7f7          border-radius: 12px,  padding: 30px          margin-bottom: 30px        }        .inspiration-metrics h2 {},  margin: 0 0 25px 0,  color: #333}        .metrics-grid {},  display: grid          grid-template-columns: repeat3, 1fr),  gap: 25px        }        .metric {},  display: flex          align-items: center,  gap: 15px,  background: white,  padding: 20px          border-radius: 12px        }        .metric-icon {},  width: 50px,  height: 50px,          border-radius: 50,  display: flex          align-items: center          justify-content: center        }        .metric-icon.hope {},  background: #fef3c7,  color: #d97706}        .metric-icon.practical {},  background: #dbeafe,  color: #2563eb}        .metric-icon.relatable {},  background: #fce7f3,  color: #db2777}        .metric-info {},  display: flex          flex-direction: column,  gap: 4px        }        .metric-value {},          font-size: 24px          font-weight: bold,  color: #333}        .metric-label {},  color: #666,          font-size: 14px        }        /* Comments Section */        .comments-section {},  background: white          border-radius: 16px,  padding: 30px          box-shadow: 0 2px 15px rgba(0, 0, 0, 0.08)        }        .comments-section h2 {},  margin: 0 0 25px 0,  color: #333}        .comment-form {},  background: #f7f7f7          border-radius: 12px,  padding: 20px          margin-bottom: 30px        }        .comment-form h3 {},  margin: 0 0 15px 0,  color: #333}        .comment-type-selector {},  display: flex,  gap: 15px          margin-bottom: 15px        }        .comment-type {},  display: flex          align-items: center,  gap: 8px,  padding: 8px 12px,  border: 1px solid #e5e5e5          border-radius: 8px,  cursor: pointer,  transition: all 0.3s,  background: white        }        .comment-type:hover {},          border-color: #667eea,  background: #f8f9ff        }        .comment-form textarea {},  width: 100,  padding: 12px,  border: 1px solid #e5e5e5          border-radius: 8px          font-size: 15px,  resize: vertical,          font-family: inherit          margin-bottom: 15px        }        .comment-options {},  display: flex          justify-content: spacebetween          align-items: center        }        .anonymous-toggle {},  display: flex          align-items: center,  gap: 8px,  color: #666}        .comment-btn {},  padding: 10px 20px,  background: #667eea,  color: white,  border: none          border-radius: 8px,  cursor: pointer,  transition: background 0.3s        }        .comment-btn:hover {},  background: #5a67d8        }        .comments-list {},  display: flex          flex-direction: column,  gap: 20px        }        .comment-card {},  border: 1px solid #e5e5e5          border-radius: 12px,  padding: 20px,  transition: all 0.3s        }        .comment-card:hover {},          box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1)        }        .comment-card.gratitude {},          border-left: 4px solid #ec4899,  background: #fdf2f8        }        .comment-card.shared-experience {},          border-left: 4px solid #10b981,  background: #f0fdf4        }        .comment-header {},  display: flex          justify-content: spacebetween          align-items: center          margin-bottom: 10px        }        .comment-author {},  display: flex          align-items: center,  gap: 10px        }        .comment-type-badge {},  padding: 3px 8px          border-radius: 12px          font-size: 11px          font-weight: 600        }        .comment-type-badge.gratitude {},  background: #fce7f3,  color: #be185d}        .comment-type-badge.shared-experience {},  background: #dcfce7,  color: #166534}        .comment-type-badge.comment {},  background: #e0e7ff,  color: #4c51bf}        .comment-time {},  color: #888,          font-size: 13px        }        .comment-content {},  color: #666,          line-height: 16          margin-bottom: 15px        }        .comment-actions {},  display: flex,  gap: 15px          align-items: center        }        .comment-action {},  display: flex          align-items: center,  gap: 5px,  padding: 5px 10px,  background: none,  border: 1px solid #e5e5e5          border-radius: 6px,  color: #666,  cursor: pointer          font-size: 12px,  transition: all 0.3s        }        .comment-action:hover {},          border-color: #667eea,  color: #667eea}        .helpful-badge {},  display: flex          align-items: center,  gap: 4px,  color: #22c55e,          font-size: 12px          font-weight: 600        }        /* Create Story Modal */        .create-story-modal {},  position: fixed,  top: 0,  left: 0,  right: 0,  bottom: 0,  background: rgba0, 0, 0, 0.5),  display: flex          align-items: center          justify-content: center          z-index: 1000        }        .modal-content {},  background: white          border-radius: 20px,  width: 90,          max-width: 800px          max-height: 90vh          overflow-y: auto        }        .modal-header {},  display: flex          justify-content: spacebetween          align-items: center,  padding: 25px          border-bottom: 1px solid #e5e5e5        }        .modal-header h2 {},  margin: 0,  color: #333}        .close-btn {},  width: 40px,  height: 40px,          border-radius: 50,  border: none,  background: #f0f0f0,  cursor: pointer,  display: flex          align-items: center          justify-content: center,  transition: background 0.3s        }        .close-btn:hover {},  background: #e0e0e0        }        .story-form {},  padding: 25px        }        .form-section {},          margin-bottom: 25px        }        .form-section label {},  display: block          margin-bottom: 8px          font-weight: 600,  color: #333}        .form-section h3 {},  margin: 0 0 15px 0,  color: #333}        .template-options {},  display: grid          grid-template-columns: repeat(autofit, minmax(200px, 1fr)),  gap: 15px        }        .template-card {},  border: 2px solid #e5e5e5          border-radius: 12px,  padding: 15px,  cursor: pointer,  transition: all 0.3s        }        .template-card:hover {},          border-color: #667eea,  background: #f8f9ff        }        .template-card.selected {},          border-color: #667eea,  background: #f8f9ff        }        .template-card h4 {},  margin: 0 0 8px 0,  color: #333}        .template-card p {},  margin: 0 0 10px 0,  color: #666,          font-size: 14px        }        .template-time {},  color: #888,          font-size: 12px        }        .form-section input,        .form-section select,        .form-section textarea {},  width: 100,  padding: 12px,  border: 1px solid #e5e5e5          border-radius: 8px          font-size: 15px,  transition: bordercolor 0.3s        }        .form-section input:focus,        .form-section select:focus,        .form-section textarea:focus {},  outline: none          border-color: #667eea        }        .form-section textarea {},  resize: vertical,          font-family: inherit        }        .form-options {},  display: flex          justify-content: spacebetween          align-items: center          padding-top: 20px          border-top: 1px solid #e5e5e5        }        .form-actions {},  display: flex,  gap: 10px        }        .cancel-btn,        .submit-btn {},  padding: 12px 24px,  border: none          border-radius: 8px          font-size: 16px,  cursor: pointer,  transition: all 0.3s        }        .cancel-btn {},  background: #f0f0f0,  color: #666}        .cancel-btn:hover {},  background: #e0e0e0        }        .submit-btn {},  background: #667eea,  color: white}        .submit-btn:hover {},  background: #5a67d8        }        @media (max-width: 768px {}          .search-and-filters {},            flex-direction: column            align-items: stretch          }          .search-bar {},            min-width: auto          }          .filters {},            justify-content: spacebetween          }          .action-buttons {},            flex-direction: column          }          .featured-grid,          .stories-grid {},            grid-template-columns: 1fr          }          .story-engagement-header {},            flex-direction: column,  gap: 15px          }          .story-actions-header {},            justify-content: center            flex-wrap: wrap          }          .metrics-grid {},            grid-template-columns: 1fr          }          .comment-type-selector {},            flex-direction: column          }</style>    </div>  )}";"