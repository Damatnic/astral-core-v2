name: E2E Testing Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run critical crisis flow tests every 4 hours
    - cron: '0 */4 * * *'

env:
  NODE_VERSION: '18'
  CI: true

jobs:
  e2e-crisis-flows:
    name: Crisis Flow E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium firefox

      - name: Build application
        run: npm run build:production

      - name: Start development server
        run: |
          npm run dev &
          sleep 30
          curl --fail http://localhost:8888 || exit 1

      - name: Run crisis flow E2E tests
        run: npm run test:e2e-crisis
        env:
          PLAYWRIGHT_HTML_REPORT: playwright-report-crisis

      - name: Upload crisis flow test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: crisis-flow-test-results
          path: |
            playwright-report-crisis/
            test-results/
          retention-days: 7

  e2e-accessibility:
    name: Accessibility E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Build application
        run: npm run build:production

      - name: Start development server
        run: |
          npm run dev &
          sleep 30

      - name: Run accessibility E2E tests
        run: npm run test:e2e-accessibility

      - name: Upload accessibility test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: accessibility-test-results
          path: |
            playwright-report/
            test-results/
          retention-days: 7

  e2e-mobile:
    name: Mobile Responsive E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium firefox webkit

      - name: Build application
        run: npm run build:production

      - name: Start development server
        run: |
          npm run dev &
          sleep 30

      - name: Run mobile responsive E2E tests
        run: npm run test:e2e-mobile

      - name: Upload mobile test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: mobile-test-results
          path: |
            playwright-report/
            test-results/
          retention-days: 7

  e2e-comprehensive:
    name: Full E2E Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 60
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Build application
        run: npm run build:production

      - name: Start development server
        run: |
          npm run dev &
          sleep 30

      - name: Run complete E2E test suite
        run: npm run test:e2e
        env:
          PLAYWRIGHT_HTML_REPORT: playwright-report-full

      - name: Upload comprehensive test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: comprehensive-test-results
          path: |
            playwright-report-full/
            test-results/
          retention-days: 30

      - name: Generate test summary
        if: always()
        run: |
          echo "# E2E Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Test Coverage" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Crisis chat flows" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Helper certification" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Safety plan creation" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Emergency escalation" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Accessibility compliance" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Mobile responsiveness" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "View detailed results in the artifacts." >> $GITHUB_STEP_SUMMARY

  notify-on-failure:
    name: Notify on Test Failure
    runs-on: ubuntu-latest
    needs: [e2e-crisis-flows, e2e-accessibility, e2e-mobile]
    if: failure()

    steps:
      - name: Create issue on test failure
        uses: actions/github-script@v7
        with:
          script: |
            const title = `E2E Test Failure - ${new Date().toISOString().split('T')[0]}`;
            const body = `
            ## E2E Test Failure Report

            One or more E2E tests have failed in the latest run.

            **Commit**: ${context.sha}
            **Branch**: ${context.ref}
            **Workflow**: ${context.workflow}

            ### Failed Jobs:
            - Crisis Flow Tests: ${{ needs.e2e-crisis-flows.result }}
            - Accessibility Tests: ${{ needs.e2e-accessibility.result }}
            - Mobile Tests: ${{ needs.e2e-mobile.result }}

            Please review the test artifacts and fix any issues with critical mental health workflows.

            **Priority**: High (affects user safety features)
            `;

            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['bug', 'e2e-failure', 'high-priority']
            });
