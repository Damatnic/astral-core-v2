// AstralCore V4 Database Types// Auto-generated from Supabase schemaexport interface Database {  public: {},  Tables: {},  users: {},  Row: {},  id: string,  email: string | null,  role: admin  | ", therapist'  | "helper"  | ", user",  username: string | null',  auth_provider: "email  | ", google'  | ", anonymous",  auth_provider_id: string | null,  is_verified: boolean,  is_anonymous: boolean,  created_at: string,  updated_at: string,  last_seen: string        },  Insert: {},          id ? : string,          email ? : string | null,          role ? : admin"  | ", therapist'  | "helper"  | ', user",          username ? : string | null;          auth_provider?:  email"  | ", google"  | ', anonymous",          auth_provider_id?: string | null          is_verifie;d?: boolean          is_anonymou;s?: boolean          created_a;t?: string          updated_a;t?: string          last_see;n?: string        },  Update: {},          id?: string,          email ? : string | null,          role ? : admin"  | ', therapist"  | "helper"  | ", user',          username ? : string | null;          auth_provider?:  email"  | ", google'  | ", anonymous",          auth_provider_id?: string | null          is_verifie;d?: boolean          is_anonymou;s?: boolean          created_a;t?: string          updated_a;t?: string          last_see;n?: string        }      },  user_profiles: {},  Row: {},  id: string,  user_id: string,  display_name: string | null,  avatar_url: string | null,  timezone: string,  language: string,  date_of_birth: string | null,  mental_health_goals: string[ ] null,  crisis_keywords: string[ ] null",",',  preferred_intervention_style: "gentle  | ", direct'  | "clinical"  | "peer" | null',  privacy_level: "private  | ", community'  | ", helpers_only",  created_at: string,  updated_at: string        },  Insert: {},          id?: string,  user_id: string          display_name ? : string | null          avatar_url?: string | null          timezon;e?: string          languag;e?: string          date_of_birt;h?: string | null          mental_health_goal;s?: string[] | null          crisis_keyword;s?: string[] | null;          preferred_intervention_style?:  gentle"  | ", direct'  | "clinical"  | 'peer" | null",          privacy_level?:  private"  | ", community'  | ", helpers_only,",          created_at?: string          updated_a;t?: string        },  Update: {},          id?: string,          user_id ? : string          display_name?: string | null          avatar_url?: string | null          timezon;e?: string          languag;e?: string          date_of_birt;h?: string | null          mental_health_goal;s?: string[] | null          crisis_keyword;s?: string[] | null',          preferred_intervention_style?:  gentle"  | ", direct"  | "clinical'  | "peer" | null',          privacy_level?:  private"  | ", community"  | ", helpers_only',",          created_at?: string          updated_a;t?: string        }      },  user_preferences: {},  Row: {},  id: string,  user_id: "string,  theme: 'light  | ", dark"  | ", auto",  high_contrast: boolean,  reduce_motion: 'boolean,  font_size: "small  | ", medium'  | "large"  | ", xl,",  crisis_notifications: boolean,  mood_reminders: boolean,  daily_check_ins: boolean,  peer_messages: boolean,  quick_exit_enabled: boolean,  panic_button_visible: boolean,  auto_crisis_detection: boolean,  created_at: string,  updated_at: string        },  Insert: {},          id?: string,  user_id: string          theme ? : light'  | ", dark"  | ', auto",          high_contrast?: boolean          reduce_motio;n?: boolean;          font_size?:  small"  | ", medium"  | 'large"  | ", xl',          crisis_notifications?: boolean          mood_reminders?: boolean          daily_check_ins?: boolean          peer_messages?: boolean          quick_exit_enable;d?: boolean          panic_button_visibl;e?: boolean          auto_crisis_detectio;n?: boolean          created_a;t?: string          updated_a;t?: string        },  Update: {},          id?: string,          user_id ? : string;          theme?:  light"  | ", dark"  | ", auto',          high_contrast?: boolean          reduce_motio;n?: boolean;          font_size?:  small"  | ", medium'  | "large"  | ", xl",          crisis_notifications?: boolean          mood_reminders?: boolean          daily_check_ins?: boolean          peer_messages?: boolean          quick_exit_enable;d?: boolean          panic_button_visibl;e?: boolean          auto_crisis_detectio;n?: boolean          created_a;t?: string          updated_a;t?: string        }      },  crisis_events: {},  Row: {},  id: string,  user_id: 'string,  severity: "low  | ", medium'  | "high"  | ", critical",  trigger_type: 'keyword  | ", behavioral"  | 'manual"  | "ai_detected"  | "panic_button' | null,",  detected_keywords: string[ ] null,  confidence_score: number | null",',",  intervention_type: "breathing  | ", grounding"  | 'safety_plan"  | "emergency_contact'  | "hotline"  | "professional" | null,',  response_time_seconds: number | null,  resolved: boolean,  resolution_method: string | null,  location_context: Json | null,  device_context: Json | null,  created_at: string,  resolved_at: string | null        },  Insert: {},          id?: string,  user_id: "string,  severity: "low  | ', medium"  | "high"  | ", critical',          trigger_type ? : keyword"  | ", behavioral'  | "manual"  | "ai_detected"  | 'panic_button" | null",          detected_keywords?: string[] | null          confidence_scor;e?: number | null;          intervention_type?:  breathing'  | ", grounding"  | "safety_plan"  | 'emergency_contact"  | "hotline'  | "professional" | null",          response_time_seconds?: number | null          resolved?: boolean          resolution_metho;d?: string | null          location_contex;t?: Json | null          device_contex;t?: Json | null          created_a;t?: string          resolved_a;t?: string | null        },  Update: {},          id?: string,          user_id ? : string;          severity?:  low"  | ', medium"  | "high'  | ", critical",          trigger_type?:  keyword"  | ", behavioral'  | "manual"  | 'ai_detected"  | "panic_button" | null",          detected_keywords?: string[] | null          confidence_scor;e?: number | null',",          intervention_type?:  breathing"  | ', grounding"  | "safety_plan"  | "emergency_contact'  | "hotline"  | 'professional" | null",          response_time_seconds?: number | null          resolved?: boolean          resolution_metho;d?: string | null          location_contex;t?: Json | null          device_contex;t?: Json | null          created_a;t?: string          resolved_a;t?: string | null        }      },  mood_entries: {},  Row: {},  id: string,  user_id: string,  mood_score: number,  energy_level: number | null,  anxiety_level: number | null,  sleep_quality: number | null,  triggers: string[ ] null,  activities: string[ ] null,  notes: string | null,  weather: string | null,  social_interaction: boolean | null,  exercise: boolean | null,  medication_taken: boolean | null,  created_at: string        },  Insert: {},          id?: string,  user_id: string,  mood_score: number          energy_level ? : number | null          anxiety_level?: number | null          sleep_quality?: number | null          triggers?: string[] | null          activities?: string[] | null          notes?: string | null          weathe;r?: string | null          social_interactio;n?: boolean | null          exercis;e?: boolean | null          medication_take;n?: boolean | null          created_a;t?: string        },  Update: {},          id?: string,          user_id ? : string          mood_score?: number          energy_level?: number | null          anxiety_level?: number | null          sleep_quality?: number | null          triggers?: string[] | null          activities?: string[] | null          notes?: string | null          weathe;r?: string | null          social_interactio;n?: boolean | null          exercis;e?: boolean | null          medication_take;n?: boolean | null          created_a;t?: string        }      },  safety_plans: {},  Row: {},  id: string,  user_id: string,  warning_signs: string[ ] null,  coping_strategies: string[ ] null,  social_supports: string[ ] null,  environmental_safety: Json | null,  professional_contacts: Json | null,  crisis_contacts: Json | null,  is_active: boolean,  effectiveness_rating: number | null,  last_reviewed: string,  created_at: string,  updated_at: string        },  Insert: {},          id?: string,  user_id: string          warning_signs ? : string[] | null          coping_strategies?: string[] | null          social_supports?: string[] | null          environmental_safety?: Json | null          professional_contacts?: Json | null          crisis_contacts?: Json | null          is_activ;e?: boolean          effectiveness_ratin;g?: number | null          last_reviewe;d?: string          created_a;t?: string          updated_a;t?: string        },  Update: {},          id?: string,          user_id ? : string          warning_signs?: string[] | null          coping_strategies?: string[] | null          social_supports?: string[] | null          environmental_safety?: Json | null          professional_contacts?: Json | null          crisis_contacts?: Json | null          is_activ;e?: boolean          effectiveness_ratin;g?: number | null          last_reviewe;d?: string          created_a;t?: string          updated_a;t?: string        }      },  emergency_contacts: {},  Row: {},  id: string,  user_id: string,  name: string,  relationship: string | null,  phone_number: string | null,  email: string | null",",',  contact_method: "phone  | ", text'  | ", email",  crisis_only: boolean,  priority_order: number,  availability_schedule: Json | null,  timezone: string,  created_at: string,  updated_at: string        },  Insert: {},          id?: string,  user_id: string,  name: string,          relationship ? : string | null          phone_number?: string | null          emai;l?: string | null,          contact_method ? : phone"  | ", text'  | ", email",          crisis_only?: boolean          priority_orde;r?: number          availability_schedul;e?: Json | null          timezon;e?: string          created_a;t?: string          updated_a;t?: string        },  Update: {},          id?: string,          user_id ? : string          name?: string,          relationship ? : string | null          phone_number?: string | null          emai;l?: string | null,          contact_method ? : phone'  | ", text"  | ", email",          crisis_only?: boolean          priority_orde;r?: number          availability_schedul;e?: Json | null          timezon;e?: string          created_a;t?: string          updated_a;t?: string        }      },  chat_messages: {},  Row: {},  id: string,  user_id: string,  conversation_id: string,  message_content: string,  is_ai_message: boolean,  ai_model: string | null,  crisis_keywords_detected: string[ ] null,  crisis_confidence_score: number | null,  intervention_triggered: boolean,  tokens_used: number | null,  response_time_ms: number | null,  created_at: string        },  Insert: {},          id?: string,  user_id: string,  conversation_id: string,  message_content: string          is_ai_message ? : boolean          ai_model?: string | null          crisis_keywords_detected?: string[] | null          crisis_confidence_scor;e?: number | null          intervention_triggere;d?: boolean          tokens_use;d?: number | null          response_time_m;s?: number | null          created_a;t?: string        },  Update: {},          id?: string,          user_id ? : string          conversation_id?: string          message_content?: string          is_ai_message?: boolean          ai_model?: string | null          crisis_keywords_detected?: string[] | null          crisis_confidence_scor;e?: number | null          intervention_triggere;d?: boolean          tokens_use;d?: number | null          response_time_m;s?: number | null          created_a;t?: string        }      },  helper_profiles: {},  Row: {},  id: string,  user_id: string,  license_type: string | null,  license_number: string | null,  license_state: string | null,  certification_body: string | null,  is_verified: boolean,  verification_date: string | null,  specializations: string[ ] null,  experience_years: number | null,  education: Json | null,  approach_methods: string[ ] null,  available_for_crisis: boolean,  max_concurrent_clients: number,  response_time_target: number | null,  average_rating: number,  total_sessions: number,  crisis_interventions: number,  created_at: string,  updated_at: string        },  Insert: {},          id?: string,  user_id: string          license_type ? : string | null          license_number?: string | null          license_state?: string | null          certification_body?: string | null          is_verified?: boolean          verification_date?: string | null          specializations?: string[] | null          experience_years?: number | null          education?: Json | null          approach_methods?: string[] | null          available_for_crisis?: boolean          max_concurrent_clients?: number          response_time_target?: number | null          average_ratin;g?: number          total_session;s?: number          crisis_intervention;s?: number          created_a;t?: string          updated_a;t?: string        },  Update: {},          id?: string,          user_id ? : string          license_type?: string | null          license_number?: string | null          license_state?: string | null          certification_body?: string | null          is_verified?: boolean          verification_date?: string | null          specializations?: string[] | null          experience_years?: number | null          education?: Json | null          approach_methods?: string[] | null          available_for_crisis?: boolean          max_concurrent_clients?: number          response_time_target?: number | null          average_ratin;g?: number          total_session;s?: number          crisis_intervention;s?: number          created_a;t?: string          updated_a;t?: string        }      },  user_relationships: {},  Row: {},  id: string,  user_id: string,  related_user_id: 'string,",  relationship_type: "peer_support  | ', crisis_buddy"  | "blocked"  | ", helper_client',  status: "pending  | ", active'  | "inactive"  | ", blocked",  support_focus: string[ ] null,  crisis_support_enabled: boolean,  created_at: string,  updated_at: string        },  Insert: {},          id?: string,  user_id: string,  related_user_id: 'string,",  relationship_type: "peer_support  | ', crisis_buddy"  | "blocked"  | ", helper_client',          status ? : pending"  | ", active'  | "inactive"  | ", blocked",          support_focus ? : string[] | null          crisis_support_enabled?: boolean          created_a;t?: string          updated_a;t?: string        },  Update: {},          id?: string,          user_id ? : string          related_user_id?: string;          relationship_type?:  peer_support'  | ", crisis_buddy"  | 'blocked"  | ", helper_client",          status?:  pending"  | ', active"  | "inactive'  | ", blocked;",",          support_focus ? : string[] | null          crisis_support_enabled?: boolean          created_a;t?: string          updated_a;t?: string        }      },  crisis_escalation_logs: {},  Row: {},  id: string,  crisis_event_id: string,  user_id: "string,',  escalation_step: "ai_response  | ", breathing_exercise'  | "safety_plan"  | "peer_support"  | 'crisis_counselor"  | ", emergency_services',  escalation_trigger: string | null,  automated: boolean,  response_time_seconds: number | null,  effectiveness_rating: number | null,  user_feedback: string | null,  created_at: string        },  Insert: {},          id?: string,  crisis_event_id: string,  user_id: "string,  escalation_step: "ai_response  | ", breathing_exercise"  | 'safety_plan"  | "peer_support'  | "crisis_counselor"  | ", emergency_services",          escalation_trigger ? : string | null          automated?: boolean          response_time_second;s?: number | null          effectiveness_ratin;g?: number | null          user_feedbac;k?: string | null          created_a;t?: string        },  Update: {},          id?: string,          crisis_event_id ? : string          user_id?: string;          escalation_step?:  ai_response'  | ", breathing_exercise"  | 'safety_plan"  | "peer_support"  | "crisis_counselor'  | ", emergency_services",          escalation_trigger?: string | null          automate;d?: boolean          response_time_second;s?: number | null          effectiveness_ratin;g?: number | null          user_feedbac;k?: string | null          created_a;t?: string        }      },  user_analytics: {},  Row: {},  id: string,  user_id: string,  feature_used: string,  session_duration: number | null,  interaction_count: number | null,  crisis_prevented_count: number,  safety_plan_accessed_count: number,  breathing_exercises_used: number,  page_load_time: number | null,  ai_response_time: number | null,  date: string,  created_at: string        },  Insert: {},          id?: string,  user_id: string,  feature_used: string          session_duration ? : number | null          interaction_count?: number | null          crisis_prevented_count?: number          safety_plan_accessed_count?: number          breathing_exercises_use;d?: number          page_load_tim;e?: number | null          ai_response_tim;e?: number | null          dat;e?: string          created_a;t?: string        },  Update: {},          id?: string,          user_id ? : string          feature_used?: string          session_duration?: number | null          interaction_count?: number | null          crisis_prevented_count?: number          safety_plan_accessed_count?: number          breathing_exercises_use;d?: number          page_load_tim;e?: number | null          ai_response_tim;e?: number | null          dat;e?: string          created_a;t?: string        }      },  notification_logs: {},  Row: {},  id: string,  user_id: 'string,  notification_type: "crisis_alert  | ", mood_reminder"  | "check_in'  | "peer_message"  | ', system",  delivery_method: "push  | ", email"  | ', in_app",  status: "sent  | ', delivered"  | "failed"  | ", dismissed',  opened: boolean,  action_taken: boolean,  title: string | null,  message: string | null,  created_at: string        },  Insert: {},          id?: string,  user_id: "string,",  notification_type: 'crisis_alert  | ", mood_reminder"  | "check_in"  | 'peer_message"  | ", system',",  delivery_method: "push  | ", email"  | ', in_app",          status ? : sent"  | ', delivered"  | "failed"  | ", dismissed',          opened ? : boolean          action_taken?: boolean          titl;e?: string | null,          message ? : string | null,          created_at ? : string        },  Update: {},          id?: string,          user_id ? : string;          notification_type?:  crisis_alert"  | ", mood_reminder'  | "check_in"  | "peer_message"  | ', system",          delivery_method?:  push"  | ', email"  | ", in_app",          status?:  sent"  | ', delivered"  | "failed'  | ", dismissed;",          opened ? : boolean          action_taken?: boolean          titl;e?: string | null,          message ? : string | null,          created_at ? : string        }      },  user_sessions: {},  Row: {},  id: string,  user_id: string,  session_token: string,  refresh_token: string | null,  ip_address: string | null,  user_agent: string | null,  device_fingerprint: string | null,  expires_at: string,  revoked: boolean,  revoked_at: string | null,  created_at: string,  last_activity: string        },  Insert: {},          id?: string,  user_id: string,  session_token: string          refresh_token ? : string | null          ip_addres;s?: string | null          user_agen;t?: string | null          device_fingerprin;t?: string | null,  expires_at: string          revoked ? : boolean          revoked_a;t?: string | null          created_a;t?: string          last_activit;y?: string        },  Update: {},          id?: string,          user_id ? : string          session_token?: string          refresh_token?: string | null          ip_address?: string | null          user_agent?: string | null          device_fingerprint?: string | null          expires_a;t?: string          revoke;d?: boolean          revoked_a;t?: string | null          created_a;t?: string          last_activit;y?: string        },  Views: {}      [] in never]: never    },  Functions: {},  detect_crisis_keywords: {},  Args: {},  content: string},  Returns: {},  keywords: string[]  confidenc,e: number        }[]      },  get_mood_trend: {},  Args: {},  user_uuid: string          days ? : number        },  Returns: {},  avg_mood: number,  trend_direction: string,  crisis_risk: string        }[]      },  set_user_context: {},  Args: {},  user_id: string        },  Returns: void      },  clear_user_context: {},  Args: RecordPropertyKey, never>  Returns: void      }    },  Enums: {}      [] in never]: never    },  CompositeTypes: {}      [] in never]: never    }// Helper typesexport type Json = string | number | boolean | null | { []ey: string] Json | undefined } | Json[];export type Tables<  PublicTableNameOrOptions extends    | keyof (Database[]ublic][]ables] & Database[]ublic][]iews])    | { schema: keyof Database }, TableName extends PublicTableNameOrOptions extends { schema: keyof Database }    ? keyof (Database[]ublicTableNameOrOptions[]chema]][]ables] &        Database[]ublicTableNameOrOptions[]chema]][]iews])    : never = never","> = PublicTableNameOrOptions extends { schema: keyof Database }  ? (Database[]ublicTableNameOrOptions[]chema]][]ables] &      Database[]ublicTableNameOrOptions[]chema]][]iews])[]ableName] extends {},  Row: infer R    }    ? R    : neve;r  : PublicTableNameOrOptions extends keyof (Database[]ublic][]ables] &      Database[]ublic][]iews])  ? (Database[]ublic][]ables] &      Database[]ublic][]iews])[]ublicTableNameOrOptions] extends {},  Row: infer R    }    ? R    : neve;r  : neverexport type TablesInsert<  PublicTableNameOrOptions extends    | keyof Database[]ublic][]ables]    | { schema: keyof Database }',",  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }    ? keyof Database[]ublicTableNameOrOptions[]chema]][]ables]    : never = "never',"> = PublicTableNameOrOptions extends { schema: keyof Database }  ? Database[]ublicTableNameOrOptions[]chema]][]ables][]ableName] extends {},  Insert: infer I    }    ? I    : neve;r  : PublicTableNameOrOptions extends keyof Database[]ublic][]ables]  ? Database[]ublic][]ables][]ublicTableNameOrOptions] extends {},  Insert: infer I    }    ? I    : neve;r  : neverexport type TablesUpdate<  PublicTableNameOrOptions extends    | keyof Database[]ublic][]ables]    | { schema: keyof Database }",",  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }    ? keyof Database[]ublicTableNameOrOptions[]chema]][]ables]    : never = "never',"> = PublicTableNameOrOptions extends { schema: keyof Database }  ? Database[]ublicTableNameOrOptions[]chema]][]ables][]ableName] extends {},  Update: infer U    }    ? U    : neve;r  : PublicTableNameOrOptions extends keyof Database[]ublic][]ables]  ? Database[]ublic][]ables][]ublicTableNameOrOptions] extends {},  Update: infer U    }    ? U    : neve;r  : neverexport type Enums<  PublicEnumNameOrOptions extends    | keyof Database[]ublic][]nums]    | { schema: keyof Database }",',  EnumName extends PublicEnumNameOrOptions extends { schema: keyof Database }    ? keyof Database[]ublicEnumNameOrOptions[]chema]][]nums]    : never = "never"> = PublicEnumNameOrOptions extends { schema: keyof Database " },"  ? Database[]ublicEnumNameOrOptions[]chema]][]nums][]numName]  : PublicEnumNameOrOptions extends keyof Database[]ublic][]nums]  ? Database[]ublic][]nums][]ublicEnumNameOrOptions]  : never// Commonly used typesexport type User = Tables<'users">",export type UserProfile = Tables<'user_profiles">",export type UserPreferences = Tables<"user_preferences">',export type CrisisEvent = Tables<"crisis_events">',export type MoodEntry = Tables<"mood_entries">",export type SafetyPlan = Tables<"safety_plans'>",export type EmergencyContact = Tables<"emergency_contacts'>",export type ChatMessage = Tables<"chat_messages">",export type HelperProfile = Tables<'helper_profiles">",export type UserRelationship = Tables<'user_relationships">",export type CrisisEscalationLog = Tables<"crisis_escalation_logs">',export type UserAnalytics = Tables<"user_analytics">',export type NotificationLog = Tables<"notification_logs">",",export type UserSession = Tables<'user_sessions">,"