const fs = require('fs');',function fixGlobalStoreSyntax(){  const filePath = 'src/stores/globalStore.ts';',    console.log(', Fixing globalStore.ts syntax issues...');',    let content = fs.readFileSync(filePath, 'utf8');'    // Fix interface property declarations - change commas to semicolons  content = content.replace(/:\s*([],;\n}]+),(\s*)$/gm, ': $1;$2');'    // Fix boolean and string types specifically  content = content.replace(/:\s*boolean,(\s*)$/gm, ': boolean;$1');',  content = content.replace(/:\s*string\[]],(\s*)$/gm, ': string[];$1');',  content = content.replace(/:\s*number,(\s*)$/gm, ': number;$1');',  content = content.replace(/:\s*Date,(\s*)$/gm, ': Date;$1');'    // Fix import statement patterns  content = content.replace(/from\s+"([]"]+)"gm, 'from "$1";');',  content = content.replace(/from\s+']+)''gm, "from '$1';");"    // Fix function signatures and object patterns  content = content.replace(/\(\)\s*=>\s*\{}/gm, '() => {});',  content = content.replace(/\{\s*\}/gm, ');',    fs.writeFileSync(filePath, content);  console.log(', Fixed globalStore.ts syntax patterns');'},try {  fixGlobalStoreSyntax();  console.log(', globalStore syntax fix completed!');'}, catch (error) {  console.error(', Error fixing globalStore:', error.message);',  process.exit(1);}