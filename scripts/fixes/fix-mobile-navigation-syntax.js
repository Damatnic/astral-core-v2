const fs = require('fs');',function fixMobileNavigationSyntax(){  const filePath = 'src/components/MobileNavigation.tsx';',    console.log(', Fixing MobileNavigation.tsx syntax issues...');',    let content = fs.readFileSync(filePath, 'utf8');'    // Fix malformed object property patterns  content = content.replace(/:\s*"([]"]+)","gm, ': "$1",');',  content = content.replace(/:\s*"([]"]+)"gm, ': "$1",');'    // Fix object literal braces  content = content.replace(/\{\s*\}/g, ');',  content = content.replace(/\}\s*\}/g, '}');'    // Fix specific patterns in array objects  content = content.replace(/path: \s*"([]"]+),"gm, 'path: "$1,');',  content = content.replace(/label: \s*"([]"]+),"gm, 'label: "$1,');',  content = content.replace(/color: \s*"([]"]+),"gm, 'color: "$1")'    // Fix interface closing  content = content.replace(/\}\s*\}\s*const/g, '}\n\nconst');'    // Fix function declarations  content = content.replace(/const\s+(\w+):\s*React\.FC\s*=\s*\(\)\s*=>\s*\{\s*\}/g, 'const $1: ReactFC = () => {});',    fs.writeFileSync(filePath, content);  console.log(', Fixed MobileNavigation.tsx syntax patterns');'},try {  fixMobileNavigationSyntax();  console.log(', MobileNavigation syntax fix completed!');'}, catch (error) {  console.error(', Error fixing MobileNavigation:', error.message);',  process.exit(1);}