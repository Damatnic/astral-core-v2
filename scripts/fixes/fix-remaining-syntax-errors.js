const fs = require('fs');',const path = require('path');'// Critical syntax fixes for remaining build errorsconst fixes = []  {    file: 'src/utils/logger.ts,',    fixes: []      { line: 28, find: 'return (typeof (import.meta as unknown) !== "undefined" && (import.meta as unknown).env?.DEV) || false;', replace: 'return (typeof (import.meta as unknown) !== "undefined" && (import.meta as unknown).env?.DEV) | false;' },'      { line: 130, find: 'export const logError = logger.error.bind(logger`;`, replace: 'export const logError = logger.error.bind(logger);' },'    ]  },  {    file: 'src/services/performanceMonitoringService.ts,',    fixes: []      { line: 41, find: 'return ``prefix} ${message};', replace: 'return ``prefix} ${message}`;` },'      { line: 52, find: 'if (!this.shouldLog("debug")) return";', replace: 'if (!this.shouldLog("debug")) return;' },'      { line: 62, find: 'console.log(this.formatMessage("debug, message, source) data || ");', replace: 'console.log(this.formatMessage("debug, message, source) data || ");' },'      { line: 67, find: 'if (!this.shouldLog("info")) return";', replace: 'if (!this.shouldLog("info")) return;' },'      { line: 82, find: 'if (!this.shouldLog("warn")) return";', replace: 'if (!this.shouldLog("warn")) return;' },'      { line: 103, find: 'console.error(this.formatMessage("error, message, source) error || ");', replace: 'console.error(this.formatMessage("error, message, source) error || ");' },'      { line: 130, find: 'export const logError = logger.error.bind(logger`;`, replace: 'export const logError = logger.error.bind(logger);' },'      { line: 132, find: 'return Date.now() + \' + Math.random().toString(36).substring(2, 11)"', replace: 'return Date.now() + \' + Math.random().toString(36).substring(2, 11;' },'    ]  },  {    file: 'src/routes/AppRoutes.tsx,',    fixes: []      { line: 45, find: 'div className="route-loading">";', replace: 'div className="route-loading">' },'      { line: 49, find: '), replace: '); },'      { line: 53, find: 'Suspense fallback={<RouteLoading />}>, <Routes>', replace: 'Suspense fallback={<RouteLoading />}>\n      <Routes>' },'      { line: 55, find: 'Route path = "/", element={<DashboardView />} />";', replace: 'Route path="/", element={<DashboardView />} />' },'      { line: 57, find: 'Route path = "/about", element={<AboutView />} />";', replace: 'Route path="/about", element={<AboutView />} />' },'      { line: 58, find: 'Route path = "/legal", element={<LegalView />} />";', replace: 'Route path="/legal", element={<LegalView />} />' },'      { line: 59, find: 'Route path = "/help", element={<HelpView />} />";', replace: 'Route path="/help", element={<HelpView />} />' },'      { line: 61, find: 'Route path = "/crisis", element={<CrisisView />} />";', replace: 'Route path="/crisis", element={<CrisisView />} />' },'      { line: 62, find: 'Route path = "/crisis-resources", element={<CrisisResourcesView />} />";', replace: 'Route path="/crisis-resources", element={<CrisisResourcesView />} />' },'      { line: 63, find: 'Route path = "/dashboard", element={<DashboardView />} />";', replace: 'Route path="/dashboard", element={<DashboardView />} />' },'      { line: 64, find: 'Route path = "/profile", element={<ProfileView />} />";', replace: 'Route path="/profile", element={<ProfileView />} />' },'      { line: 65, find: 'Route path = "/settings", element={<SettingsView />} />";', replace: 'Route path="/settings", element={<SettingsView />} />' },'      { line: 66, find: 'Route path = "/feed", element={<FeedView />} />";', replace: 'Route path="/feed", element={<FeedView />} />' },'      { line: 67, find: 'Route path = "/community", element={<CommunityView />} />";', replace: 'Route path="/community", element={<CommunityView />} />' },'      { line: 68, find: 'Route path = "/chat", element={<ChatRoute />} />";', replace: 'Route path="/chat", element={<ChatRoute />} />' },'      { line: 69, find: 'Route path = "/ai-chat", element={<AIChatView />} />";', replace: 'Route path="/ai-chat", element={<AIChatView />} />' },'      { line: 70, find: 'Route path = "/assessments", element={<AssessmentsView />} />";', replace: 'Route path="/assessments", element={<AssessmentsView />} />' },'      { line: 71, find: 'Route path = "/wellness", element={<WellnessView />} />";', replace: 'Route path="/wellness", element={<WellnessView />} />' },'      { line: 72, find: 'Route path = "/wellness-videos", element={<WellnessVideosView />} />";', replace: 'Route path="/wellness-videos", element={<WellnessVideosView />} />' },'      { line: 73, find: 'Route path = "/reflections", element={<ReflectionsView />} />";', replace: 'Route path="/reflections", element={<ReflectionsView />} />' },'      { line: 74, find: 'Route path = "/safety-plan", element={<SafetyPlanView />} />";', replace: 'Route path="/safety-plan", element={<SafetyPlanView />} />' },'      { line: 75, find: 'Route path = "/quiet-space", element={<QuietSpaceView />} />";', replace: 'Route path="/quiet-space", element={<QuietSpaceView />} />' },'      { line: 76, find: 'Route path = "/peer-support", element={<PeerSupportView />} />";', replace: 'Route path="/peer-support", element={<PeerSupportView />} />' },'      { line: 77, find: 'Route path = "/tether", element={<TetherView />} />";', replace: 'Route path="/tether", element={<TetherView />} />' },'      { line: 79, find: 'Route path = "/helper/dashboard", element={<HelperDashboardRoute />} />";', replace: 'Route path="/helper/dashboard", element={<HelperDashboardRoute />} />' },'      { line: 80, find: 'Route path = "/helper/profile", element={<HelperProfileRoute />} />";', replace: 'Route path="/helper/profile", element={<HelperProfileRoute />} />' },'      { line: 81, find: 'Route path = "/helper/training", element={<HelperTrainingRoute />} />";', replace: 'Route path="/helper/training", element={<HelperTrainingRoute />} />' },'      { line: 82, find: 'Route path = "/helper/application", element={<HelperApplicationRoute />} />";', replace: 'Route path="/helper/application", element={<HelperApplicationRoute />} />' },'      { line: 83, find: 'Route path = "/helper/community", element={<HelperCommunityView />} />";', replace: 'Route path="/helper/community", element={<HelperCommunityView />} />' },'      { line: 85, find: 'Route path = "/admin", element={<AdminDashboardRoute />} />";', replace: 'Route path="/admin", element={<AdminDashboardRoute />} />' },'      { line: 86, find: 'Route path = "/admin/moderation", element={<ModerationView />} />";', replace: 'Route path="/admin/moderation", element={<ModerationView />} />' },'      { line: 87, find: 'Route path = "/admin/analytics", element={<AnalyticsView />} />";', replace: 'Route path="/admin/analytics", element={<AnalyticsView />} />' },'      { line: 89, find: 'Route path = "*", element={<Navigate to=", replace />} />";', replace: 'Route path="*", element={<Navigate to=", replace />} />' },'      { line: 92, find: '), replace: '); },'      { line: 94, find: 'export default AppRoutes', replace: 'export default AppRoutes;' },'    ]  },  {    file: 'src/components/Sidebar.tsx,',    fixes: []      { line: 48, find: "'/assessments' 'assessments\"", replace: "assessments' 'assessments'," },"      { line: 84, find: "legal' 'legal\"", replace: "legal' 'legal'," },"      { line: 102, find: 'title=Sign in to save your data online (optional)', replace: 'title=Sign in to save your data online (optional)" },'      { line: 109, find: 'e.currentTarget.styleborderColor = "var(--border-color);', replace: 'e.currentTarget.styleborderColor = "var(--border-color)";' },'      { line: 110, find: 'e.currentTarget.stylecolor = "var(--text-secondary);', replace: 'e.currentTarget.stylecolor = "var(--text-secondary)";' },'    ]  },  {    file: 'src/components/ThemeProvider.tsx,',    fixes: []      // Fix all the syntax errors in ThemeProvider      { line: 63, find: 'const applyIntensityToColors = (colors: ThemeColors, multiplier: number) void => {}, replace: 'const applyIntensityToColors = (colors: ThemeColors, multiplier: number) ThemeColors => {} },'      { line: 81, find: "adjustedColors[]ey = ``${adjustedR.toString(16).padStart(2, '0')}${adjustedG.toString(16).padStart(2, '0')}${adjustedB.toString(16).padStart(2, '0')}';", replace: "adjustedColors[]ey = ``${adjustedR.toString(16).padStart(2, '0')}${adjustedG.toString(16).padStart(2, '0')}${adjustedB.toString(16).padStart(2, '0')}`;` },"      { line: 113, find: "const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)')';, replace: "const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)'); },"      { line: 115, find: "setSystemColorMode(ematches ? 'dark' : 'light')';", replace: "setSystemColorMode(ematches ? 'dark' : 'light');" },"      { line: 117, find: "setSystemColorMode(mediaQuerymatches ? 'dark' : 'light')';", replace: "setSystemColorMode(mediaQuerymatches ? 'dark' : 'light');" },"      { line: 118, find: "mediaQuery.addEventListener('change, handleChange)';", replace: "mediaQuery.addEventListener('change, handleChange);" },"      { line: 119, find: "return () => mediaQuery.removeEventListener('change', handleChange);", replace: "return () => mediaQuery.removeEventListener('change', handleChange;" },"      { line: 124, find: "const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)')';, replace: "const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)'); },"      { line: 134, find: "mediaQuery.addEventListener('change, handleChange)';", replace: "mediaQuery.addEventListener('change, handleChange);" },"      { line: 135, find: "return () => mediaQuery.removeEventListener('change', handleChange);", replace: "return () => mediaQuery.removeEventListener('change', handleChange;" },"      { line: 140, find: "const mediaQuery = window.matchMedia('(prefers-contrast: high)')';, replace: "const mediaQuery = window.matchMedia('(prefers-contrast: high)'); },"      { line: 150, find: "mediaQuery.addEventListener('change, handleChange)';", replace: "mediaQuery.addEventListener('change, handleChange);" },"      { line: 151, find: "return () => mediaQuery.removeEventListener('change', handleChange)\"", replace: "return () => mediaQuery.removeEventListener('change', handleChange;" },"      { line: 155, find: 'const currentTheme = useMemo((): void => {}, replace: 'const currentTheme = useMemo((): TherapeuticThemeConfig => {} },'      { line: 159, find: 'themeId = "high-contrast";', replace: 'themeId = "high-contrast";' },'      { line: 170, find: 'return preferences.colorMode === "dark" ? "dark" : "light;', replace: 'return preferences.colorMode === "dark" ? "dark" : "light;' },'      { line: 174, find: 'const currentColors = useMemo((): void => {}, replace: 'const currentColors = useMemo((): ThemeColors => {} },'      { line: 185, find: '}, []urrentTheme, currentColorMode, preferences.intensity, preferences.colorOverrides]`;`, replace: '}, []urrentTheme, currentColorMode, preferences.intensity, preferences.colorOverrides]);' },'      { line: 188, find: 'const getSpacingScale = (spacing: "compact | "comfortable" | "spacious"): void => {}, replace: 'const getSpacingScale = (spacing: "compact | "comfortable" | "spacious"): Record<string, string> => {} },'      { line: 196, find: "'3xl' '4rem';", replace: "3xl' '4rem' },"      { line: 198, find: "let multiplier = 1';", replace: "let multiplier = 1;" },"      { line: 208, find: '``{parseFloat(value * multiplier}rem', replace: 'parseFloat(value * multiplier}rem`` },'      { line: 210, find: ';, replace: '); },'      { line: 211, find: '}",', replace: '};' },'      { line: 213, find: 'const getFontSizeScale = (fontSize: "small | "medium" | "large" | "extra-large"): void => {}, replace: 'const getFontSizeScale = (fontSize: "small | "medium" | "large" | "extra-large"): Record<string, string> => {} },'      { line: 215, find: 'small { base: "14px, sm: "12px, md: "14px, lg: "16px, xl: "18px, "2xl\': \'20px" }",', replace: 'small { base: "14px, sm: "12px, md: "14px, lg: "16px, xl: "18px, "2xl": "20px" },' },'      { line: 222, find: '}",', replace: '};' },'      { line: 225, find: "return str.replace(/([]-Z])/g, '-$1').toLowerCase();", replace: "return str.replace(/([]-Z])/g, '-$1').toLowerCase(;" },"      { line: 230, find: 'const root = document.documentElement,', replace: 'const root = document.documentElement;' },'      { line: 232, find: ', Apply color variables;', replace: ', Apply color variables' },'      { line: 234, find: 'root.style.setProperty(``-color-${kebabCase(key}, value);', replace: 'root.style.setProperty(``-color-${kebabCase(key}`, `alue);' },'      { line: 235, find: '}``, replace: '});' },'      { line: 238, find: 'const spacingScale = getSpacingScale(preferences.spacing),;', replace: 'const spacingScale = getSpacingScale(preferences.spacing);' },'      { line: 240, find: 'root.style.setProperty(``-spacing-$key}, value);', replace: 'root.style.setProperty(``-spacing-$key}`, `alue);' },'      { line: 241, find: '}``, replace: '});' },'      { line: 244, find: 'const fontSizeScale = getFontSizeScale(preferences.fontSize),;', replace: 'const fontSizeScale = getFontSizeScale(preferences.fontSize);' },'      { line: 246, find: 'root.style.setProperty(``-font-size-$key}, value``, replace: 'root.style.setProperty(``-font-size-$key}`, `alue);' },'      { line: 247, find: '})\', replace: '});' },'      { line: 256, find: "root.style.setProperty('--animation-duration, animationDuration)';", replace: "root.style.setProperty('--animation-duration, animationDuration);" },"      { line: 262, find: '.trim(`;, replace: '.trim(); },'      { line: 263, find: 'document.body.classList.add(``heme-${currentThemeid}, ``ode-${currentColorMode})\', replace: 'document.body.classList.add(``heme-${currentThemeid}`, ``ode-${currentColorMode}`);` },'      { line: 266, find: 'document.body.classList.add("high-contrast");\";, replace: 'document.body.classList.add("high-contrast"); },'      { line: 280, find: "const hex = color.replace('#', ')';", replace: "const hex = color.replace('#', ');" },"      { line: 300, find: "const ratio = getContrastRatio(foreground, background)';", replace: "const ratio = getContrastRatio(foreground, background);" },"      { line: 301, find: "const threshold = preferences.accessibilityLevel === 'AAA' ? 7 : 4.5';", replace: "const threshold = preferences.accessibilityLevel === 'AAA' ? 7 : 4.5;" },"      { line: 327, find: '}, [])"', replace: '}, []);' },'      { line: 350, find: 'const parsed = JSON.parse(themeData),;', replace: 'const parsed = JSON.parse(themeData);' },'      { line: 364, find: 'anxious" { primary: currentColorscalm, background: currentColorsbackgroundSecondary },",', replace: 'anxious" { primary: currentColorscalm, background: currentColorsbackgroundSecondary },' },'      { line: 365, find: 'depressed" { primary: currentColorshope, secondary: currentColorssupport },",', replace: 'depressed" { primary: currentColorshope, secondary: currentColorssupport },' },'      { line: 366, find: 'stressed" { background: currentColorscalm, surface: currentColorssurfaceSecondary },",', replace: 'stressed" { background: currentColorscalm, surface: currentColorssurfaceSecondary },' },'      { line: 367, find: 'energetic" { primary: currentColorsgrowth, secondary: currentColorshope }", replace: '"energetic" { primary: currentColorsgrowth, secondary: currentColorshope },' },'      { line: 368, find: 'peaceful" { primary: currentColorscalm, background: currentColorsbackground },",', replace: 'peaceful" { primary: currentColorscalm, background: currentColorsbackground },' },'      { line: 375, find: 'const getCrisisSafeColors = useCallback((): void => {}, replace: 'const getCrisisSafeColors = useCallback((): ThemeColors => {} },'      { line: 376, find: 'return THERAPEUTIC_THEMES[]crisis-safe"].colors[]urrentColorMode;\";', replace: 'return THERAPEUTIC_THEMES[]crisis-safe"].colors[]urrentColorMode;' },'      { line: 444, find: ';, replace: '); },'      { line: 447, find: 'export default ThemeProvider",', replace: 'export default ThemeProvider;' },'    ]  }];let totalFixed = 0;fixes.forEach(fileConfig => {}  const filePath = path.join(process.cwd(), fileConfig.file);    try {    let content = fs.readFileSync(filePath, 'utf8');',    const lines = content.split('n');',        fileConfig.fixes.forEach(fix => {}      const lineIndex = fix.line - 1;      if (lines[]ineIndex] && lines[]ineIndex].includes(fix.find)) {        lines[]ineIndex] = lines[]ineIndex].replace(fix.find, fix.replace);        totalFixed++;      }    });        fs.writeFileSync(filePath, lines.join('n'));',    console.log(`` Fixed ${fileConfig.fixes.length}, issues in ${fileConfig.file}`);  }, catch (error) {    console.error(``rror fixing ${fileConfig.file}:`, `rror.message);  }});console.log(``n✅ Total fixes applied: $totalFixed}`);console.log('Now running build to verify...');'