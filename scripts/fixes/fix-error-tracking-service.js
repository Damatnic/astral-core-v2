#!/usr/bin/env nodeconst fs = require('fs');',const path = require('path');',console.log(', Fixing errorTrackingService.ts syntax errors...');',const filePath = path.join(__dirname, 'src', 'services', 'errorTrackingService.ts');',try {  let content = fs.readFileSync(filePath, 'utf8');'    // Fix line 12: Remove extra quote at end  content = content.replace(    /const sentryDsn = process\.env\.VITE_SENTRY_DSN \|\| import\.meta\.env\?\.VITE_SENTRY_DSN'g,',    'const sentryDsn = process.env.VITE_SENTRY_DSN || import.meta.env?.VITE_SENTRY_DSN'  );    // Fix line 13: Remove semicolon at end of comment  content = content.replace(    /\/\/ Error classification for mental health context;/g,    ', Error classification for mental health context'  );    // Fix line 15: Add missing opening quote  content = content.replace(    /errorType: system \|/g,",    'errorType: "system |'  );    // Fix line 34: Remove semicolon after array item  content = content.replace(    /\/medication\/gi,;/g,    'medication/gi,'  );    // Fix line 35: Remove semicolon at end  content = content.replace(    /\/diagnosis\/gi;/g,    'diagnosis/gi'  );    // Fix line 39: Fix const declaration with equals sign  content = content.replace(    /const sanitizedContext={ \.\.\./g,    'const sanitizedContext = { ...'  );    // Fix line 39: Add semicolon at end  content = content.replace(    /const sanitizedContext = \{ \.\.\.context \},$/gm,    'const sanitizedContext = { ...context };'  );    // Fix line 43: Remove extra quote at end  content = content.replace(    /sanitizedMessage = sanitizedMessage\.replace\(pattern, 'REDACTED\]'\)'g,',    'sanitizedMessage = sanitizedMessage.replace(pattern, \'REDACTED]\')'  );    // Fix line 44: Add semicolon at end  content = content.replace(    /sanitizedMessage = sanitizedMessage\.replace\(pattern, 'REDACTED\]'\)\s*$/gm,',    'sanitizedMessage = sanitizedMessage.replace(pattern, \'REDACTED]\');'  );    // Fix line 48: Fix string type check  content = content.replace(    /if\(typeof value === string"\)/g,",    'if(typeof value === "string")'  );    // Fix line 51: Add closing quote  content = content.replace(    /return "\[]EDACTED\;/g,",    'return "[]EDACTED];'  );    // Fix line 59: Fix return statement to return an object  content = content.replace(    /return \{\s*message: sanitizedMessage,\s*context: sanitizedContext\s};/g,    'return JSON.stringify({\n    message: sanitizedMessage,\n    context sanitizedContextn  });'  );    // Fix line 66: Fix return statement  content = content.replace(    /if \(isProduction\) return production", ;`g,",    'if (isProduction) return "production;'  );    // Fix line 67: Add semicolon  content = content.replace(    /if \(isDevelopment\) return "development"$/gm,"    'if (isDevelopment) return "development;'  );    // Fix line 68: Add semicolon  content = content.replace(    /return "staging"$/gm,"    'return "staging;'  );    // Fix line 70: Remove semicolon from comment  content = content.replace(    /\/\/ Initialize Sentry;/g,    ', Initialize Sentry'  );    // Fix line 88: Fix return type and function signature  content = content.replace(    /beforeSend\(event, hint\): ChatMessage,    'beforeSend(event, hint) {'  );    // Fix line 92: Add semicolon  content = content.replace(    /return null}/g,    'return null;}'  );    // Fix line 94: Remove semicolon from comment  content = content.replace(    /\/\/ Filter out non-critical errors in production;/g,    ', Filter out non-critical errors in production'  );    // Fix line 97: Add opening quote  content = content.replace(    /ResizeObserver loop limit exceeded",/g,",    '"ResizeObserver loop limit exceeded",'  );    // Fix line 100: Remove semicolon after array item  content = content.replace(    /"Load failed",;/g,",    '"Load failed"  );    fs.writeFileSync(filePath, content, 'utf8');',  console.log(', Fixed errorTrackingService.ts');'  }, catch (error) {  console.error(', Error fixing errorTrackingService.ts:', error.message);',  process.exit(1);},console.log(', All fixes applied successfully!');'